#Install and Load Libraries 

install.packages("car")
install.packages("sm")
install.packages("ggplot2") # for general plots
install.packages("beeswarm") # for beeswarm plots
install.packages("MASS") # for polr package
install.packages("generalhoslem") # for testing model fit (lipsitz test and two others)
install.packages("qwraps2") # for summary_table use
install.packages("quantreg") # testing quantile plots (geom_quantile) and quantile regressions
install.packages ("olsrr") #for testing normality
install.packages("ggpubr") #for density plots
install.packages("dplyr")
install.packages("tidyr")
install.packages("lme4")
install.packages("VGAM") #for tobit model 
install.packages("gridExtra") 
install.packages("sjPlot")
install.packages("sjmisc")
install.packages("sjlabelled")

library(ggplot2) 
library(beeswarm)
library(MASS) 
library(generalhoslem) 
library(qwraps2) 
library(quantreg) 
library(olsrr)
library(car)
library(sm)
library(ggpubr)
library(dplyr)
library(tidyr)
library(lme4)
library(VGAM)
library(gridExtra)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
	

#Import Data 
      setwd("~/Desktop")   
      Map <- read.csv("Mapping_Coding_KW_200602.csv", na.strings = "N/A")
      View(Map) #224 kids  

## BASIC DEMOGRAPHICS ## 
      Map_Demo <- subset(Map, Map$Age_Rounded>=4.5 & Map$Age_Rounded<=10 | is.na(Map$Age_Rounded))
      View(Map_Demo) # 220 kids total ages 4.5-9 (including kids we never tested)

#FOR DEMOGRAPHICS OF ALL POSSIBLE KIDS INCLUDING FOR MAPPING 
      Total_Inc_Study <- subset(Map_Demo, Map_Demo$Including.in.Study == "Yes" & Map_Demo$Coded. == "Yes" & Map_Demo$Mapping_Include. == "Yes")
      View(Total_Inc_Study)
      # 199 total kids included in study 
       
      ## Included OVERALL: Numbers of Kids Per Group ##
      EE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Early")
      View(EE_Inc) #48
      EL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Later")
      View(EL_Inc) #47
      AE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Early")
      View(AE_Inc) #49
      AL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Later")
      View(AL_Inc) #55
      
      Total_Not_Inc_Study <- subset(Map_Demo, Map_Demo$Mapping_Include. == "No")
      nrow(Total_Not_Inc_Study)
      View(Total_Not_Inc_Study)
      # 21 total kids not included in mapping analyses (if not included in study overall, not including in mapping)
                     
      Total_NotTested_NA <- subset(Map_Demo,  Map_Demo$Tested == "No" | Map_Demo$Tested == "Not Yet" | is.na(Map_Demo$Mapping_Include.))
      nrow(Total_NotTested_NA)
      # 15 kids not including in study were Not Tested 
       
      Tested_Not_Inc <- subset(Total_Not_Inc_Study, Total_Not_Inc_Study$Tested == "Yes")
      View(Tested_Not_Inc)
      # 6 kid out of 15 not included in study were tested
      #3 had additional disabilities/suspected disabilities, 1 refused to participate, 1 due to technical difficulties (not filmed entirely), 1 Early ASL tested in ALL English, after trying ASL (could not communicate)

      ## Tested But Not Included: How many from each group? ## 
            EE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Early")
            nrow(EE_Not_Inc) # 0 of 6 kids tested but not included are EE
            EL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Later")
            nrow(EL_Not_Inc) # 0 of 6 kids tested but not included are EL
            AE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Early")
            nrow(AE_Not_Inc)# 4 of 6 kids tested but not included are AE
            AL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Later")
            nrow(AL_Not_Inc) # 2 of 6 kids tested but not included are AL
   

## Creating a Table/"Matrix": Included vs Not (& not tested) by Group ##

      rnames <- c("Including in Study","Not Including in Study")
      cnames <- c("English Early","English Later","ASL Early","ASL Later")
      Table_IncStudy <- matrix(c(nrow(EE_Inc),nrow(EL_Inc),nrow(AE_Inc),nrow(AL_Inc),nrow(EE_Not_Inc),nrow(EL_Not_Inc),nrow(AE_Not_Inc),nrow(AL_Not_Inc)), nrow=2, ncol=4, byrow=TRUE, dimnames=list(rnames,cnames))
      Table_IncStudy

## Chi-Square on Table/"Matrix": Does the status of including in study depend on which group kids were in?, aka Early ASL more likely to not be included? ##
chisq.test(Table_IncStudy)
# Test statistic is X-squared = 6.9145, df = 3, p-value = 0.07467, do not reject null, conclude that status of inclusion in study is not dependent on group 4 category

# Find observations with missing Age and SES values
      sum(is.na(Total_Inc_Study$Age_Rounded) | Total_Inc_Study$Age_Rounded=="N/A")
      #Not missing any age values

      sum(is.na(Total_Inc_Study$SES) | Total_Inc_Study$SES=="N/A")
      #Missing 9 SES values
      
      Incorrect_SES <- subset(Total_Inc_Study, Total_Inc_Study$SES < 3 | Total_Inc_Study$SES > 66) 
      nrow(Incorrect_SES) #None are inappropriate/out of SES range
      
# SEX DESCRIPTIVE STATISTICS
sum(Total_Inc_Study$M.F=='Female')
sum(Total_Inc_Study$M.F=='Male') 
sum(EE_Inc$M.F=='Female') 
sum(EE_Inc$M.F=='Male') 
sum(EL_Inc$M.F=='Female') 
sum(EL_Inc$M.F=='Male') 
sum(AE_Inc$M.F=='Female') 
sum(AE_Inc$M.F=='Male') 
sum(AL_Inc$M.F=='Female') 
sum(AL_Inc$M.F=='Male') 
  
# AGE DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, range)

# SES DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, range)

#Age of Language Exposure
mean(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, range)
sum(is.na(Total_Inc_Study$Age.of.Exposure..mo..Language) | Total_Inc_Study$Age.of.Exposure..mo..Language=="N/A") # missing 11

#Age of Auditory Exposure
mean(Total_Inc_Study$Auditory_ageexposure..mo., na.rm=TRUE) 
aggregate(Auditory_ageexposure..mo. ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Auditory_ageexposure..mo., na.rm=TRUE) 
aggregate(Auditory_ageexposure..mo. ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Auditory_ageexposure..mo., na.rm=TRUE) 
aggregate(Auditory_ageexposure..mo. ~ Group_4cat, data=Total_Inc_Study, range)
sum(is.na(Total_Inc_Study$Auditory_ageexposure..mo.) | Total_Inc_Study$Auditory_ageexposure..mo.=="N/A") # missing 23 

--------------------------------------------------------------------------------------------------------------------

#Analysis

## MAPPING DATA FRAME ## 
  Map_Inc <- Total_Inc_Study #rename for ease
  View(Map_Inc) 
  
# Create Timing & Modality Data Frames
	Early <- subset(Map_Inc, Map_Inc$Timing == "Early")
	Later <- subset(Map_Inc, Map_Inc$Timing == "Later")
	ASL <- subset(Map_Inc, Map_Inc$Modality == "ASL")
	English <- subset(Map_Inc, Map_Inc$Modality == "English")
  
#General Analyses
wilcox.test(Map_Inc$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 19701, p-value < 2.2e-16
wilcox.test(Early$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 4753, p-value < 2.2e-16
wilcox.test(Later$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 5151, p-value < 2.2e-16
wilcox.test(ASL$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 5356, p-value < 2.2e-16
wilcox.test(English$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 4560, p-value < 2.2e-16

	#Overall Performance at or near Ceiling (>= 95%)
		Ceil <- Map_Inc$AvgCorrect_Total
		All <- .9 #ceiling performance 
		Var <- length(which(Ceil>= All)) #number of observations equal to ceiling 
		N_O <- nrow(Map_Inc) #number of total observations
		(Var/N_O)*100 # 42.2%


#TOBIT MODELS, resource: https://stats.idre.ucla.edu/r/dae/tobit-models/
	#Create Dataframe
	which(colnames(Map_Inc)=="AvgCorrect_Sm_QW") #315
	which(colnames(Map_Inc)=="AvgCorrect_Lrg_WN") #323
	T_long <- pivot_longer(Map_Inc, cols = 315:323, values_to = "AvgCorr")
  	View(T_long)
	which(colnames(T_long)=="Item1_QN_Answer") #24
	which(colnames(T_long)=="Sum_Numeral.Word_Word.Numeral") #320
	T_short <- T_long[,-c(24:320)]
	View(T_short)
	#Add Set Size Columns
	T_short <-  mutate(T_short, SetSize = case_when(grepl("Sm", T_short$name) ~ "Small", grepl("Med", T_short$name) ~"Medium", grepl("Lrg", T_short$name) ~"Large"))
	T_short$Set_Size <- as.factor(factor(as.character(T_short$SetSize), levels=c("Small", "Medium", "Large"), exclude=""))
	T_short$Set_Size_refM <- as.factor(factor(as.character(T_short$SetSize), levels=c("Medium", "Small", "Large"), exclude=""))
	#Add Map Pair Columns
	T_short <- mutate(T_short, MapPair = case_when(grepl("QW", T_short$name) ~ "Quantity-Word", grepl("QN", T_short$name) ~"Quantity-Numeral", grepl("WN", T_short$name) ~"Numeral-Word"))
	T_short$MapPair <- as.factor(factor(as.character(T_short$MapPair), levels=c("Numeral-Word","Quantity-Numeral", "Quantity-Word"), exclude=""))
	T_short$MapPair_refQW <- as.factor(factor(as.character(T_short$MapPair), levels=c("Quantity-Word","Numeral-Word","Quantity-Numeral"), exclude=""))
	View(T_short)
  
	#Overall Results (ages 5-9) resulted in Hauck-Donner effect for Age because ceiling effect
	summary(Map_t<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair + Timing:Modality, tobit(Upper = 1), data = T_short))

		#9-year-olds’ Performance at Ceiling 
		Map_Inc_9 <- subset(Map_Inc, Map_Inc$Age_Rounded >=9)
		Ceil <- Map_Inc_9$SumCorrectTotal_All
		All <- 51 #ceiling performance 
		Var <- length(which(Ceil>= All)) #number of observations equal to ceiling 
		N <- nrow(Map_Inc_9) #number of total observations
		(Var/N)*100 #41% of 9-year-olds performed at ceiling (answered all 51 trials correctly)

	
	#Subsetted data to only 5-8 year olds no longer any Hauck-Donner effects
	Map_58 <- subset(T_short, T_short$Age_Rounded <=8)
	View(Map_58)
	
	# DO WE NEED TO INCLUDE THE MODEL WITHOUT THE INTERACTION?
	
	#Without a Modality:Timing interaction, Modality is significant. 
	summary(Map_58_noI<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair, tobit(Upper = 1), data = Map_58))
	#Log likelihood: -561.6852
	#Calculate model fit, https://www.stata.com/support/faqs/statistics/pseudo-r2/
	summary(Map_58_null<- vglm(AvgCorr ~  1, tobit(Upper = 1.0), data = Map_58)) 
	#Log likelihood: -774.0106
	print(pseudo_R2_noI <- 1 - (-561.6852 / -774.0106)) #0.27
	 
	
	#Including Modality:Timing interaction makes the effect of modality disappear
	summary(Map_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair + Modality:Timing, tobit(Upper = 1), data = Map_58))
	summary(Map_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + MapPair_refQW + Modality:Timing, tobit(Upper = 1), data = Map_58))
	#Log likelihood: -555.0348
	#Checking model fit
	print(pseudo_R2_I <- 1 - (-555.0348 / -774.0106)) # 0.28
	
	#Creating HTML tables, Resource: https://strengejacke.github.io/sjPlot/articles/tab_model_estimates.html
	tab_model(Map_58_I, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_I, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Medium", "Large", "Quantity-Numeral", "Quantity-Word", "Modality (English) x Timing (Later)"), dv.labels = c("Reference groups: Small and Numeral-Word"), string.p = "p-value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value
	tab_model(Map_58_I_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_I_ref, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Small", "Large", "Numeral-Word", "Quantity-Numeral", "Modality (English) x Timing (Later)"), dv.labels = c("Reference groups: Medium and Quantity-Word"), string.p = "p-value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value

	#Modality/Timing visualizations for ages 5-8
	Map_Inc_58 <- subset(Map_Inc, Map_Inc$Age_Rounded <=9) 
	View(Map_Inc_58)
	nrow(Map_Inc_58) #173 rows
	Early_58 <- (subset(Map_Inc_58, Map_Inc_58$Timing == "Early")) 
	nrow(Early_58) #83 rows
	mean(Early_58$AvgCorrect_Total) #0.91
	Later_58 <- (subset(Map_Inc_58, Map_Inc_58$Timing == "Later")) 
	nrow(Later_58) #90 rows
	mean(Later_58$AvgCorrect_Total) #0.85
	English_58 <- (subset(Map_Inc_58, Map_Inc_58$Modality == "English")) 
	nrow(English_58) #90 rows
	mean(English_58$AvgCorrect_Total) #0.89
	ASL_58 <- (subset(Map_Inc_58, Map_Inc_58$Modality == "ASL")) 
	nrow(ASL_58) #83 rows
	mean(ASL_58$AvgCorrect_Total) #0.87
	
	
	#Beeswarm Boxplots
	c <- ggplot(data=Map_Inc_58, mapping = aes(x= Timing, y=AvgCorrect_Total)) + geom_boxplot() + geom_dotplot(mapping=aes(fill=Timing, color=Timing), dotsize = .8, method = "dotdensity", binaxis = "y", stackdir = "center") + theme(legend.position="top", text = element_text(size=14), axis.title.x=element_blank()) + ylab("Proportion Correct") + scale_fill_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)")) + scale_color_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)"))+ stat_summary(fun=mean, geom="point", shape=18, size=5, color="black") 
	c
	d <- ggplot(data=Map_Inc, mapping = aes(x= Modality, y=AvgCorrect_Total)) + geom_boxplot() + geom_dotplot(mapping=aes(fill=Modality, color=Modality), dotsize = .8, method = "dotdensity", binaxis = "y", stackdir = "center") + theme(legend.position="top", text = element_text(size=14), axis.title.x=element_blank()) + ylab("Proportion Correct") + scale_fill_manual(name = "Language Modality", breaks=c("ASL", "English"), values=c("tan2", "forestgreen"), labels=c("ASL (83)", "English (90)")) + scale_color_manual(name = "Language Modality", breaks=c("ASL", "English"), values=c("tan2", "forestgreen"), labels=c("ASL (83)", "English (90)"))+ stat_summary(fun=mean, geom="point", shape=18, size=5, color="black") 
	d
	
	grid.arrange(c,d,nrow=1)
	
	
	# REDO BELOW SCATTERPLOTS FOR 5-8 AGE RANGE!
	
	# Modality/Timing Overall Visualizations

	a <- ggplot(data = Map_Inc, mapping = aes(x=Age_Rounded, y=AvgCorrect_Total, shape = Timing, color = Timing)) + geom_point() + geom_smooth(method="loess") + labs(x="Age (years)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(5, 9), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9)) + scale_shape_manual(name="Language Timing", values=c(16, 17), labels=c("Early (97)", "Later (102)")) + scale_color_manual(name="Language Timing", values=c("deepskyblue3", "firebrick3"), labels=c("Early (97)", "Later (102)"))
	a
	
	b <- ggplot(data = Map_Inc, mapping = aes(x=Age_Rounded, y=AvgCorrect_Total, shape = Modality, color = Modality)) + geom_point() + geom_smooth(method="loess") + labs(x="Age (years)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(5, 9), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9)) + scale_shape_manual(name="Language Modality", values=c(16, 17), labels=c("English (95)", "ASL (104)")) + scale_color_manual(name="Language Modality", values=c("tan2", "forestgreen"), labels=c("English (95)", "ASL (104)"))
	b
	
	grid.arrange(a,b,nrow=1)
	
	
	

	# LEADS INTO EXAMINING CONTINUOUS VS 2 GROUP CATEGORIZATION WITH TOBIT MODELS:
	
	# DO SIMILIAR TOBIT MODELS BUT WITH AGE OF LANGUAGE EXPOSURE/AGE OF AUDITORY EXPOSURE
	summary(Map_58_Age_noI<- vglm(AvgCorr ~  Age_Rounded + SES + Age.of.Exposure..mo..Language + Auditory_ageexposure..mo. + Set_Size + MapPair, tobit(Upper = 1), data = Map_58))
	#-500.6164  
	print(pseudo_R2_I <- 1 - (-500.6164  / -774.0106)) # R-squared: 0.35
	summary(Map_58_Age_I<- vglm(AvgCorr ~  Age_Rounded + SES + Age.of.Exposure..mo..Language + Auditory_ageexposure..mo. + Set_Size + MapPair + Age.of.Exposure..mo..Language: Auditory_ageexposure..mo., tobit(Upper = 1), data = Map_58))
	#-495.3131
	print(pseudo_R2_I <- 1 - (-495.3131  / -774.0106)) # R-squared: 0.36
	summary(Map_58_Age_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Age.of.Exposure..mo..Language + Auditory_ageexposure..mo. + Set_Size_refM + MapPair_refQW + Age.of.Exposure..mo..Language: Auditory_ageexposure..mo., tobit(Upper = 1), data = Map_58))
	
	# USE MODEL WITH INTERACTION B/C INTERACTION SIG AND IMPROVES MODEL FIT
	
	tab_model(Map_58_Age_I, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_Age_I, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Age of Language Exposure", "Age of Auditory Exposure", "Medium", "Large", "Quantity-Numeral", "Quantity-Word", "Age of Language Exposure x Age of Auditory Exposure"), dv.labels = c("Reference groups: Small and Numeral-Word"), string.p = "p-value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value
	tab_model(Map_58_Age_I_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_Age_I_ref, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Age of Language Exposure", "Age of Auditory Exposure", "Small", "Large", "Numeral-Word", "Quantity-Numeral", "Age of Language Exposure x Age of Auditory Exposure"), dv.labels = c("Reference groups: Medium and Quantity-Word"), string.p = "p-value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value
	
	#Scatterplots of age of exposures by prop correct
	e <- ggplot(data = Map_Inc_58, mapping = aes(x=Age.of.Exposure..mo..Language, y=AvgCorrect_Total)) + geom_point() + geom_smooth(method="loess") + labs(x="Age of Language Exposure (months)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(0, 100), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(0, 25, 50, 75, 100))
	e
	f <- ggplot(data = Map_Inc_58, mapping = aes(x=Auditory_ageexposure..mo., y=AvgCorrect_Total)) + geom_point() + geom_smooth(method="loess") + labs(x="Age of Auditory Exposure (months)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(0, 125), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(0, 25, 50, 75, 100, 125))
	f
	grid.arrange(e,f,nrow=1)
	
	#Comparing model fits of discrete vs continuous variables
	#0.28 for modality/timing versus 0.36 for age auditory/language exposure
	
	
	
	#TOBIT MODELS FOR MAPPING PAIRS 
	QW_58 <- subset(Map_58, Map_58$MapPair == "Quantity-Word")
	View(QW_58)
	QN_58 <- subset(Map_58, Map_58$MapPair == "Quantity-Numeral")
	View(QN_58)
	NW_58 <- subset(Map_58, Map_58$MapPair == "Numeral-Word")
	View(NW_58)
	
	summary(QW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = QW_58))
	#Log likelihood: -189.4989 
	summary(QW_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = QW_58))
	summary(QN_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = QN_58))
	#Log likelihood: -193.3709
	summary(QN_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = QN_58))
	
	#Calculate model fit
	summary(QW_58_null<- vglm(AvgCorr ~  1, tobit(Upper = 1.0), data = QW_58)) #Log likelihood: -259.8835
	summary(QN_58_null<- vglm(AvgCorr ~  1, tobit(Upper = 1.0), data = QN_58)) #Log likelihood: -274.5746
	print(pseudo_R2_QW <- 1 - (-189.4989 / -259.8835)) #Quantity-Word R-squared: 0.27
	print(pseudo_R2_QN <- 1 - (-193.3709 / -274.5746)) #Quantity-Numeral R-squared: 0.30
	
	tab_model(QW_58_I, QN_58_I, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(QW_58_I, QN_58_I, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Medium", "Large", "Modality (English) x Timing (Later)"), dv.labels = c("Quantity-Word", "Quantity-Numeral"), string.p = "p-Value", string.se = "Standard Error", string.stat = "t-statistic")
	tab_model(QW_58_I_ref, QN_58_I_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(QW_58_I_ref, QN_58_I_ref, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Small", "Large", "Modality (English) x Timing (Later)"), dv.labels = c("Quantity-Word", "Quantity-Numeral"), string.p = "p-Value", string.se = "Standard Error", string.stat = "t-statistic")
	
	Early_QW_58 <- subset(QW_58, QW_58$Timing == "Early")
	mean(Early_QW_58$AvgCorr) #0.87
	Later_QW_58 <- subset(QW_58, QW_58$Timing == "Later")
	mean(Later_QW_58$AvgCorr) #0.78
	English_QW_58 <- subset(QW_58, QW_58$Modality == "English")
	mean(English_QW_58$AvgCorr) #0.83
	ASL_QW_58 <- subset(QW_58, QW_58$Modality == "ASL")
	mean(ASL_QW_58$AvgCorr) #0.81
	
	Early_QN_58 <- subset(QN_58, QN_58$Timing == "Early")
	mean(Early_QN_58$AvgCorr) #0.90
	Later_QN_58 <- subset(QN_58, QN_58$Timing == "Later")
	mean(Later_QN_58$AvgCorr) #0.81
	English_QN_58 <- subset(QN_58, QN_58$Modality == "English")
	mean(English_QN_58$AvgCorr) #0.88
	ASL_QN_58 <- subset(QN_58, QN_58$Modality == "ASL")
	mean(ASL_QN_58$AvgCorr) #0.83


	#HAUCK DONNER IN AGE FOR NUMERAL-WORD MODELS!
	summary(NW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = NW_58))
	summary(NW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = NW_58))
	
	#Mapping Pair Visualizations
	timing_map <- ggplot(Map_58, aes(MapPair, AvgCorr, fill=Timing)) + geom_boxplot() + labs(x="Mapping Pairs", y="Proportion Correct", fill = "Timing") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + theme(legend.position="top", plot.title = element_text(color="black", size=14), axis.title.x = element_text(color="black", size=14), axis.text.x = element_text(color="black", size=12), axis.title.y = element_text(color="black", size=14), axis.text.y = element_text(color="black", size=12), legend.title = element_text(color="black", size=14), legend.text = element_text(color="black", size=14)) + scale_fill_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)")) + scale_color_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)"))
	timing_map
	modality_map <- ggplot(Map_58, aes(MapPair, AvgCorr, fill=Modality)) + geom_boxplot() + labs(x="Mapping Pairs", y="Proportion Correct", fill = "Modality") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + theme(legend.position="top", plot.title = element_text(color="black", size=14), axis.title.x = element_text(color="black", size=14), axis.text.x = element_text(color="black", size=12), axis.title.y = element_text(color="black", size=14), axis.text.y = element_text(color="black", size=12), legend.title = element_text(color="black", size=14), legend.text = element_text(color="black", size=14)) + scale_fill_manual(name = "Language Modality", breaks=c("ASL", "English"), values=c("tan2", "forestgreen"), labels=c("ASL (83)", "English (90)")) + scale_color_manual(name = "Language Modality", breaks=c("ASL", "English"), values=c("tan2", "forestgreen"), labels=c("ASL (83)", "English (90)"))  
	modality_map
	grid.arrange(timing_map, modality_map, nrow=1)


# SET SIZE VISUALIZATIONS?????
qn_ss_box <- ggplot(QN_58, aes(Set_Size, AvgCorr, fill=Timing)) + geom_boxplot() + labs(x="Quantity-Numeral", y="Proportion Correct", title="a", fill = "Timing") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + theme(legend.position="top", plot.title = element_text(color="black", size=14), axis.title.x = element_text(color="black", size=14), axis.text.x = element_text(color="black", size=12), axis.title.y = element_text(color="black", size=14), axis.text.y = element_text(color="black", size=12), legend.title = element_text(color="black", size=14), legend.text = element_text(color="black", size=14)) + scale_fill_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)")) + scale_color_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)"))

qw_ss_box <- ggplot(QW_58, aes(Set_Size, AvgCorr, fill=Timing)) + geom_boxplot() + labs(x="Quantity-Word", y="Proportion Correct", title="b", fill = "Timing") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + theme(legend.position="top", plot.title = element_text(color="black", size=14), axis.title.x = element_text(color="black", size=14), axis.text.x = element_text(color="black", size=12), axis.title.y = element_text(color="black", size=14), axis.text.y = element_text(color="black", size=12), legend.title = element_text(color="black", size=14), legend.text = element_text(color="black", size=14)) + scale_fill_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)")) + scale_color_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (83)", "Later (90)"))

grid.arrange(qn_ss_box, qw_ss_box, nrow=1)

