#Install and Load Libraries 

install.packages("car")
install.packages("sm")
install.packages("ggplot2") # for general plots
install.packages("MASS") # for polr package
install.packages("generalhoslem") # for testing model fit (lipsitz test and two others)
install.packages("qwraps2") # for summary_table use
install.packages("quantreg") # testing quantile plots (geom_quantile) and quantile regressions
install.packages ("olsrr") #for testing normality
install.packages("ggpubr") #for density plots
install.packages("dplyr")
install.packages("tidyr")
install.packages("lme4")
install.packages("VGAM") #for tobit model 

library(ggplot2) 
library(MASS) 
library(generalhoslem) 
library(qwraps2) 
library(quantreg) 
library(olsrr)
library(car)
library(sm)
library(ggpubr)
library(dplyr)
library(tidyr)
library(lme4)
library(VGAM)

#Import Data 
      setwd("~/Desktop")   
      Map <- read.csv("Mapping_Coding_KW_200427.csv", na.strings = "N/A")
      View(Map) #224 kids  

## BASIC DEMOGRAPHICS ## 
      Map_Demo <- subset(Map, Map$Age_Rounded>=4.5 & Map$Age_Rounded<=10 | is.na(Map$Age_Rounded))
      View(Map_Demo) # 220 kids total ages 4.5-9 (including kids we never tested)

#FOR DEMOGRAPHICS OF ALL POSSIBLE KIDS INCLUDING FOR MAPPING 
      Total_Inc_Study <- subset(Map_Demo, Map_Demo$Including.in.Study == "Yes" & Map_Demo$Coded. == "Yes" & Map_Demo$Mapping_Include. == "Yes")
      View(Total_Inc_Study)
      # 199 total kids included in study 
       
      ## Included OVERALL: Numbers of Kids Per Group ##
      EE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Early")
      View(EE_Inc) #48
      EL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Later")
      View(EL_Inc) #47
      AE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Early")
      View(AE_Inc) #49
      AL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Later")
      View(AL_Inc) #55
      
      Total_Not_Inc_Study <- subset(Map_Demo, Map_Demo$Mapping_Include. == "No")
      nrow(Total_Not_Inc_Study)
      View(Total_Not_Inc_Study)
      # 21 total kids not included in mapping analyses (if not included in study overall, not including in mapping)
                     
      Total_NotTested_NA <- subset(Map_Demo,  Map_Demo$Tested == "No" | Map_Demo$Tested == "Not Yet" | is.na(Map_Demo$Mapping_Include.))
      # 15 kids not including in study were Not Tested 
     
      
      Tested_Not_Inc <- subset(Total_Not_Inc_Study, Total_Not_Inc_Study$Tested == "Yes")
      View(Tested_Not_Inc)
      # 6 kid out of 15 not included in study were tested
      #3 had additional disabilities/suspected disabilities, 1 refused to participate, 1 due to technical difficulties (not filmed entirely), 1 Early ASL tested in ALL English, after trying ASL (could not communicate)

      ## Tested But Not Included: How many from each group? ## 
            EE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Early")
            nrow(EE_Not_Inc) # 0 of 6 kids tested but not included are EE
            EL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Later")
            nrow(EL_Not_Inc) # 0 of 6 kids tested but not included are EL
            AE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Early")
            nrow(AE_Not_Inc)# 4 of 6 kids tested but not included are AE
            AL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Later")
            nrow(AL_Not_Inc) # 2 of 6 kids tested but not included are AL
   

## Creating a Table/"Matrix": Included vs Not (& not tested) by Group ##

      rnames <- c("Including in Study","Not Including in Study")
      cnames <- c("English Early","English Later","ASL Early","ASL Later")
      Table_IncStudy <- matrix(c(nrow(EE_Inc),nrow(EL_Inc),nrow(AE_Inc),nrow(AL_Inc),nrow(EE_Not_Inc),nrow(EL_Not_Inc),nrow(AE_Not_Inc),nrow(AL_Not_Inc)), nrow=2, ncol=4, byrow=TRUE, dimnames=list(rnames,cnames))
      Table_IncStudy

## Chi-Square on Table/"Matrix": Does the status of including in study depend on which group kids were in?, aka Early ASL more likely to not be included? ##
chisq.test(Table_IncStudy)
# Test statistic is X-squared = 6.9145, df = 3, p-value = 0.07467, do not reject null, conclude that status of inclusion in study is not dependent on group 4 category

# Find observations with missing Age and SES values
      sum(is.na(Total_Inc_Study$Age_Rounded) | Total_Inc_Study$Age_Rounded=="N/A")
      #Not missing any age values

      sum(is.na(Total_Inc_Study$SES) | Total_Inc_Study$SES=="N/A")
      #Missing 9 SES values
      
      Incorrect_SES <- subset(Total_Inc_Study, Total_Inc_Study$SES < 3) 
      nrow(Incorrect_SES) #NONE ARE INAPPROPRIATE
      
# SEX 
  sum(Total_Inc_Study$M.F=='Female')
  sum(Total_Inc_Study$M.F=='Male') 
  sum(EE_Inc$M.F=='Female') 
  sum(EE_Inc$M.F=='Male') 
  sum(EL_Inc$M.F=='Female') 
  sum(EL_Inc$M.F=='Male') 
  sum(AE_Inc$M.F=='Female') 
  sum(AE_Inc$M.F=='Male') 
  sum(AL_Inc$M.F=='Female') 
  sum(AL_Inc$M.F=='Male') 
  

# AGE DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, range)

# SES DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, range)

#Age of Language Exposure
mean(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, range)

#CREATING TIMING/MODALITY DATA FRAMES
#TIMING GROUPS
Early <- subset(Total_Inc_Study, Total_Inc_Study$Timing == "Early")
Later <- subset(Total_Inc_Study, Total_Inc_Study$Timing == "Later")
#MODALITY GROUPS
ASL <- subset(Total_Inc_Study, Total_Inc_Study$Modality == "ASL")
English <- subset(Total_Inc_Study, Total_Inc_Study$Modality == "English")

#VARIABLE SHORTCUTS#  
Age <- Total_Inc_Study$Age_Rounded
SES <- Total_Inc_Study$SES

## TIMING VIOLIN PLOTS ## 
      TimeGrp <- Total_Inc_Study$Timing
      # TIMING: AGE 
      ggplot(Total_Inc_Study, aes(x=TimeGrp, y=Age)) + geom_violin() + labs(x="Language Timing", y="Age(years)") 
      #VISUALLY VERY SIMILAR DISTRIBUTIONS
      # TIMING: SES
      ggplot(Total_Inc_Study, aes(x=TimeGrp, y=SES)) + geom_violin() + labs(x="Language Timing", y="SES") 
      #VISUALLY VERY SIMILAR DISTRIBUTIONS

## MODALITY VIOLIN PLOTS ##
      ModalityGrp <- Total_Inc_Study$Modality
      # MODALITY: AGE
      ggplot(Total_Inc_Study, aes(x=ModalityGrp, y=Age)) + geom_violin() + labs(x="Language Modality", y="Age(years)")
      #ASL HAS MORE EVEN AGE DISTRIBUTION, ENGLISH HAS < OLDER KIDS
      # MODALITY: SES
      ggplot(Total_Inc_Study, aes(x=ModalityGrp, y=SES)) + geom_violin() + labs(x="Language Modality", y="SES")
      #ENGLISH MORE "TOP HEAVY" FOR SES 

*************************************************************************************
#Analysis

## MAPPING DATA FRAME ## 
  Map_Inc <- Total_Inc_Study #renaming for ease
  View(Map_Inc) 
  
#MIXED EFFECTS LOGISTIC REGRESSION
	Map_long <- pivot_longer(data = Map_Inc, cols=c(ends_with("Answer")), names_to = c("Type"), values_to = "Quantity")
	View(Map_long)
	Map_long1 <- Map_long[,!grepl("^Item",names(Map_long))] # delete columns that contain “item” 
	View(Map_long1)
	Map_long2 <- pivot_longer(data = Map_Inc, cols=c(ends_with("Correct.")), names_to = c("Type2"), values_to = "Correct")
	Map_long2 <- Map_long2[,!grepl("^Item",names(Map_long2))] # delete columns that contain “item” 
	View(Map_long2)
	Map_longest <- cbind(Map_long, Map_long2$Correct)
	View(Map_longest)
	Map_short <- Map_longest[,!grepl("^Item",names(Map_longest))] # delete columns that contain “item” 
	View(Map_short)
	names(Map_short)[names(Map_short) == "Map_long2$Correct"] <- "Correct"
	View(Map_short)
	
            # From Type column, create a new column (Map_Pair)
            #Create new column for which IF Map_short$Type contains “NW” or “WN”, assign value “Numeral-Word”
            Map_Pair <- c()
            for(i in 1:10149)
            Map_Pair[i] <- ifelse(grepl("NW", Map_short$Type[i]), "Numeral-Word", ifelse(grepl("WN", Map_short$Type[i]), "Numeral-Word", ifelse(grepl("QN", Map_short$Type[i]), "Quantity-Numeral", ifelse(grepl("NQ", Map_short$Type[i]), "Quantity-Numeral", ifelse(grepl("QW", Map_short$Type[i]), "Quantity-Word", ifelse(grepl("WQ", Map_short$Type[i]), "Quantity-Word","bananas"))))))
            Map_short <- cbind(Map_short, Map_Pair)
            View(Map_short)

            #From Quantity column, create Small, Med, Large
            Set_Size <- c()
            Set_Size <- case_when(Map_short$Quantity <= 3 ~ 'Small',
                                  Map_short$Quantity > 3 & Map_short$Quantity<= 5 ~ 'Medium',
                                  Map_short$Quantity > 5 ~ 'Large')
            Map_short <- cbind(Map_short,Set_Size)
	    names(Map_short)[names(Map_short) == "Map_long2$Correct"] <- "Correct"
            View(Map_short)
	    Map_short$SetSize_refM <- as.factor(factor(as.character(Map_short$Set_Size), levels=c("Medium", "Small", "Large"), exclude=""))
	    Map_short$MapPair_refQW <- as.factor(factor(as.character(Map_short$Map_Pair), levels=c("Quantity-Word","Numeral-Word","Quantity-Numeral"), exclude=""))
	    View(Map_short)   
	    
#Running Mixed Effects Logistic Regressions
	    #Mixed Log Reg for Set Size, Map Pair, Timing, Modality
	    MixReg_MT <- glmer(Correct ~ Age_Rounded + SES + Set_Size + Map_Pair + Timing + Modality + (1 | SUBJECT_ID), data = Map_short, family = binomial, control = glmerControl(optimizer ="bobyqa"), nAGQ = 10) #AIC 5114
	    summary(MixReg_MT)
	  
	    #References (changed Set Size and Map Pair)
	    MixReg_MT_ref <- glmer(Correct ~ Age_Rounded + SES + SetSize_refM + MapPair_refQW + Timing + Modality + (1 | SUBJECT_ID), data = Map_short, family = binomial, control = glmerControl(optimizer ="bobyqa"), nAGQ = 10)
	    summary(MixReg_MT_ref)
	    
	    #Creating HTML Tables
	    #Resource: https://strengejacke.github.io/sjPlot/articles/tab_model_estimates.html
		install.packages("sjPlot")
		install.packages("sjmisc")
		install.packages("sjlabelled")
		library(sjPlot)
		library(sjmisc)
		library(sjlabelled)
	    
	   tab_model(MixReg_MT, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY    
	   tab_model(MixReg_MT, auto.label = FALSE, show.icc = FALSE, show.se = TRUE, show.ci = FALSE, show.re.var = FALSE, show.stat = TRUE, pred.labels = c("Intercept", "Age", "SES", "Medium", "Small", "Quantity-Numeral", "Quantity-Word", "Timing (Later)", "Modality (English)"), dv.labels = c("References: Large and Numeral-Word"), string.p = "P-Values", string.se = "Standard Errors", string.stat = "t Statistic") #Edit to look pretty in Word
	   tab_model(MixReg_MT_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY 
	   tab_model(MixReg_MT_ref, auto.label = FALSE, show.icc = FALSE, show.se = TRUE, show.ci = FALSE, show.re.var = FALSE, show.stat = TRUE, pred.labels = c("Intercept", "Age", "SES", "Small", "Large", "Numeral-Word", "Quantity-Numeral", "Timing (Later)", "Modality (English)"), dv.labels = c("References: Medium and Quantity-Word"), string.p = "P-Values", string.se = "Standard Errors", string.stat = "t Statistic") #Edit to look pretty in Word

	#Why is Modality significant here and no where else?, Pearson's Chi-squared tests on binary outcome 
	chisq.test(Map_short$Correct, Map_short$Group_4cat) #X-squared = 118.65, df = 3, p-value < 2.2e-16
	table(Map_short$Correct, Map_short$Group_4cat) #ASL Later has substantially more 0s than other groups, inproportionate 
	
	ASL_log <- subset(Map_short, Map_short$Modality == "ASL")
	English_log <- subset(Map_short, Map_short$Modality == "English")
	chisq.test(ASL_log$Correct, ASL_log$Timing)  #X-squared = 93.661, df = 1, p-value < 2.2e-16, ASL Early and ASL Later differ
	chisq.test(English_log$Correct, English_log$Timing) #X-squared = 19.511, df = 1, p-value = 1e-05, English Early and English later differ 

  
  
  
  
  

### EDITED UP TO HERE ###
#OVERALL EDIT BELOW TO NOT BE FOR THE GROUPS! include a range of overall? 

#Overall Performance compared to chance
wilcox.test(Map_Inc$AvgCorrect_Total, mu = .25, alternative = "greater")

#Performance at Ceiling 
Ceil <- Map_Inc$SumCorrectTotal_All
All <- 51 #ceiling performance 
Var <- length(which(Ceil>= All)) #number of observations equal to ceiling 
N <- nrow(Map_Inc) #number of total observations
(Var/N)*100 #.      % at ceiling



#AGE SCATTERPLOTS
#Scatterplots of Overall Performance by Timing
ggplot(Map_Inc, aes(x=Age_Rounded, y=AvgCorrect_Total)) + geom_point(aes(shape=Timing, colour=Timing), position=jitter, size=2) + geom_smooth(aes(colour=Timing, fill=Timing), method="loess", show.legend = FALSE) + labs(x="Age (years)", y="Overall Proportion Correct") + scale_shape_manual(name="Timing of \nLanguage Exposure", labels=c("Early", "Later"), values=c(17, 15)) + scale_color_manual(name="Timing of \nLanguage Exposure", labels=c("Early", "Later"), values=c("red","blue")) + theme(text = element_text(size=16, family="Calibri")) + coord_cartesian(xlim = c(5, 10), ylim= c(0.4,1)) + scale_y_continuous(breaks=c(0.5, 0.6, 0.7, 0.8, 0.9, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9))

#Scatterplots of Overall Performance by Modality
ggplot(Map_Inc, aes(x=Age_Rounded, y=AvgCorrect_Total)) + geom_point(aes(shape=Modality, colour=Modality), position=jitter, size=2) + geom_smooth(aes(colour=Modality, fill=Modality), method="loess", show.legend = FALSE) + labs(x="Age (years)", y="Overall Proportion Correct") + scale_shape_manual(name="Language Modality", labels=c("ASL", "English"), values=c(17, 15)) + scale_color_manual(name="Language Modality", labels=c("ASL", "English"), values=c("red","blue")) + theme(text = element_text(size=16, family="Calibri")) + coord_cartesian(xlim = c(5, 10), ylim= c(0.4,1)) + scale_y_continuous(breaks=c(0.5, 0.6, 0.7, 0.8, 0.9, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9))


#Scatterplot by age with data for QW and QN only (b/c sig)
P_QW <- Map_Inc$AvgCorrect_Quantity.Word_Word.Quantity
P_QN <- Map_Inc$AvgCorrect_Quantity.Numeral_Numeral.Quantity
AgeTim <- data.frame(P_QW,P_QN,Map_Inc$Timing, Map_Inc$Age_Rounded)
View(AgeTim)
agetim.data <- melt(AgeTim, id.vars=c("Map_Inc.Timing", "Map_Inc.Age_Rounded"))
View(agetim.data)
ggplot(agetim.data, aes(x=Map_Inc.Age_Rounded, y=value)) + geom_point(aes(shape=Map_Inc.Timing, colour=Map_Inc.Timing), position=jitter, size=2) + geom_smooth(aes(colour=Map_Inc.Timing, fill=Map_Inc.Timing), method="loess", show.legend = FALSE) + labs(x="Age (years)", y="Proportion Correct") + scale_shape_manual(name="Timing of \nLanguage Exposure", labels=c("Early", "Later"), values=c(17, 15)) + scale_color_manual(name="Timing of \nLanguage Exposure", labels=c("Early", "Later"), values=c("red","blue")) + theme(text = element_text(size=16, family="Calibri")) + coord_cartesian(xlim = c(5, 10), ylim= c(0.4,1)) + scale_y_continuous(breaks=c(0.5, 0.6, 0.7, 0.8, 0.9, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9))

