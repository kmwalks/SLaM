#Install and Load Libraries 

install.packages("car")
install.packages("sm")
install.packages("ggplot2") # for general plots
install.packages("beeswarm") # for beeswarm plots
install.packages("MASS") # for polr package
install.packages("generalhoslem") # for testing model fit (lipsitz test and two others)
install.packages("qwraps2") # for summary_table use
install.packages("quantreg") # testing quantile plots (geom_quantile) and quantile regressions
install.packages ("olsrr") #for testing normality
install.packages("ggpubr") #for density plots
install.packages("dplyr")
install.packages("tidyr")
install.packages("lme4")
install.packages("VGAM") #for tobit model 
install.packages("gridExtra") 

library(ggplot2) 
library(beeswarm)
library(MASS) 
library(generalhoslem) 
library(qwraps2) 
library(quantreg) 
library(olsrr)
library(car)
library(sm)
library(ggpubr)
library(dplyr)
library(tidyr)
library(lme4)
library(VGAM)
library(gridExtra)

#Import Data 
      setwd("~/Desktop")   
      Map <- read.csv("Mapping_Coding_CH_200528.csv", na.strings = "N/A")
      View(Map) #224 kids  

## BASIC DEMOGRAPHICS ## 
      Map_Demo <- subset(Map, Map$Age_Rounded>=4.5 & Map$Age_Rounded<=10 | is.na(Map$Age_Rounded))
      View(Map_Demo) # 220 kids total ages 4.5-9 (including kids we never tested)

#FOR DEMOGRAPHICS OF ALL POSSIBLE KIDS INCLUDING FOR MAPPING 
      Total_Inc_Study <- subset(Map_Demo, Map_Demo$Including.in.Study == "Yes" & Map_Demo$Coded. == "Yes" & Map_Demo$Mapping_Include. == "Yes")
      View(Total_Inc_Study)
      # 199 total kids included in study 
       
      ## Included OVERALL: Numbers of Kids Per Group ##
      EE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Early")
      View(EE_Inc) #48
      EL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "English Later")
      View(EL_Inc) #47
      AE_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Early")
      View(AE_Inc) #49
      AL_Inc <- subset(Total_Inc_Study, Total_Inc_Study$Group_4cat == "ASL Later")
      View(AL_Inc) #55
      
      Total_Not_Inc_Study <- subset(Map_Demo, Map_Demo$Mapping_Include. == "No")
      nrow(Total_Not_Inc_Study)
      View(Total_Not_Inc_Study)
      # 21 total kids not included in mapping analyses (if not included in study overall, not including in mapping)
                     
      Total_NotTested_NA <- subset(Map_Demo,  Map_Demo$Tested == "No" | Map_Demo$Tested == "Not Yet" | is.na(Map_Demo$Mapping_Include.))
      nrow(Total_NotTested_NA)
      # 15 kids not including in study were Not Tested 
       
      Tested_Not_Inc <- subset(Total_Not_Inc_Study, Total_Not_Inc_Study$Tested == "Yes")
      View(Tested_Not_Inc)
      # 6 kid out of 15 not included in study were tested
      #3 had additional disabilities/suspected disabilities, 1 refused to participate, 1 due to technical difficulties (not filmed entirely), 1 Early ASL tested in ALL English, after trying ASL (could not communicate)

      ## Tested But Not Included: How many from each group? ## 
            EE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Early")
            nrow(EE_Not_Inc) # 0 of 6 kids tested but not included are EE
            EL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "English Later")
            nrow(EL_Not_Inc) # 0 of 6 kids tested but not included are EL
            AE_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Early")
            nrow(AE_Not_Inc)# 4 of 6 kids tested but not included are AE
            AL_Not_Inc <- subset(Tested_Not_Inc, Tested_Not_Inc$Group_4cat == "ASL Later")
            nrow(AL_Not_Inc) # 2 of 6 kids tested but not included are AL
   

## Creating a Table/"Matrix": Included vs Not (& not tested) by Group ##

      rnames <- c("Including in Study","Not Including in Study")
      cnames <- c("English Early","English Later","ASL Early","ASL Later")
      Table_IncStudy <- matrix(c(nrow(EE_Inc),nrow(EL_Inc),nrow(AE_Inc),nrow(AL_Inc),nrow(EE_Not_Inc),nrow(EL_Not_Inc),nrow(AE_Not_Inc),nrow(AL_Not_Inc)), nrow=2, ncol=4, byrow=TRUE, dimnames=list(rnames,cnames))
      Table_IncStudy

## Chi-Square on Table/"Matrix": Does the status of including in study depend on which group kids were in?, aka Early ASL more likely to not be included? ##
chisq.test(Table_IncStudy)
# Test statistic is X-squared = 6.9145, df = 3, p-value = 0.07467, do not reject null, conclude that status of inclusion in study is not dependent on group 4 category

# Find observations with missing Age and SES values
      sum(is.na(Total_Inc_Study$Age_Rounded) | Total_Inc_Study$Age_Rounded=="N/A")
      #Not missing any age values

      sum(is.na(Total_Inc_Study$SES) | Total_Inc_Study$SES=="N/A")
      #Missing 9 SES values
      
      Incorrect_SES <- subset(Total_Inc_Study, Total_Inc_Study$SES < 3 | Total_Inc_Study$SES > 66) 
      nrow(Incorrect_SES) #None are inappropriate/out of SES range
      
# SEX DESCRIPTIVE STATISTICS
sum(Total_Inc_Study$M.F=='Female')
sum(Total_Inc_Study$M.F=='Male') 
sum(EE_Inc$M.F=='Female') 
sum(EE_Inc$M.F=='Male') 
sum(EL_Inc$M.F=='Female') 
sum(EL_Inc$M.F=='Male') 
sum(AE_Inc$M.F=='Female') 
sum(AE_Inc$M.F=='Male') 
sum(AL_Inc$M.F=='Female') 
sum(AL_Inc$M.F=='Male') 
  
# AGE DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$Age_Rounded, na.rm=TRUE) 
aggregate(Age_Rounded ~ Group_4cat, data=Total_Inc_Study, range)

# SES DESCRIPTIVE STATISTICS
mean(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, mean)
sd(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, sd)
range(Total_Inc_Study$SES, na.rm=TRUE) 
aggregate(SES ~ Group_4cat, data=Total_Inc_Study, range)

#Demographic Visualizations
#CREATING TIMING/MODALITY DATA FRAMES
#TIMING GROUPS
Early <- subset(Total_Inc_Study, Total_Inc_Study$Timing == "Early")
Later <- subset(Total_Inc_Study, Total_Inc_Study$Timing == "Later")
#MODALITY GROUPS
ASL <- subset(Total_Inc_Study, Total_Inc_Study$Modality == "ASL")
English <- subset(Total_Inc_Study, Total_Inc_Study$Modality == "English")

#VARIABLE SHORTCUTS#  
Age <- Total_Inc_Study$Age_Rounded
SES <- Total_Inc_Study$SES

## TIMING VIOLIN PLOTS ## 
      TimeGrp <- Total_Inc_Study$Timing
      # TIMING: AGE 
      ggplot(Total_Inc_Study, aes(x=TimeGrp, y=Age)) + geom_violin() + labs(x="Language Timing", y="Age(years)") 
      #VISUALLY VERY SIMILAR DISTRIBUTIONS
      # TIMING: SES
      ggplot(Total_Inc_Study, aes(x=TimeGrp, y=SES)) + geom_violin() + labs(x="Language Timing", y="SES") 
      #VISUALLY VERY SIMILAR DISTRIBUTIONS

## MODALITY VIOLIN PLOTS ##
      ModalityGrp <- Total_Inc_Study$Modality
      # MODALITY: AGE
      ggplot(Total_Inc_Study, aes(x=ModalityGrp, y=Age)) + geom_violin() + labs(x="Language Modality", y="Age(years)")
      #ASL HAS MORE EVEN AGE DISTRIBUTION, ENGLISH HAS < OLDER KIDS
      # MODALITY: SES
      ggplot(Total_Inc_Study, aes(x=ModalityGrp, y=SES)) + geom_violin() + labs(x="Language Modality", y="SES")
      #ENGLISH MORE "TOP HEAVY" FOR SES 

--------------------------------------------------------------------------------------------------------------------

#Analysis

## MAPPING DATA FRAME ## 
  Map_Inc <- Total_Inc_Study #renaming for ease
  View(Map_Inc) 

#TOBIT MODELS, resource: https://stats.idre.ucla.edu/r/dae/tobit-models/
	#Create Dataframe
	which(colnames(Map_Inc)=="AvgCorrect_Sm_QW") #313
	which(colnames(Map_Inc)=="AvgCorrect_Lrg_WN") #321
	T_long <- pivot_longer(Map_Inc, cols = 313:321, values_to = "AvgCorr")
  	View(T_long)
	which(colnames(T_long)=="Item1_QN_Answer") #22
	which(colnames(T_long)=="Sum_Numeral.Word_Word.Numeral") #318
	T_short <- T_long[,-c(22:318)]
  	View(T_long)
	#Add Set Size Columns
	T_short <-  mutate(T_short, SetSize = case_when(grepl("Sm", T_short$name) ~ "Small", grepl("Med", T_short$name) ~"Medium", grepl("Lrg", T_short$name) ~"Large"))
	T_short$Set_Size <- as.factor(factor(as.character(T_short$SetSize), levels=c("Small", "Medium", "Large"), exclude=""))
	T_short$Set_Size_refM <- as.factor(factor(as.character(T_short$SetSize), levels=c("Medium", "Small", "Large"), exclude=""))
	#Add Map Pair Columns
	T_short <- mutate(T_short, MapPair = case_when(grepl("QW", T_short$name) ~ "Quantity-Word", grepl("QN", T_short$name) ~"Quantity-Numeral", grepl("WN", T_short$name) ~"Numeral-Word"))
	T_short$MapPair <- as.factor(factor(as.character(T_short$MapPair), levels=c("Numeral-Word","Quantity-Numeral", "Quantity-Word"), exclude=""))
	T_short$MapPair_refQW <- as.factor(factor(as.character(T_short$MapPair), levels=c("Quantity-Word","Numeral-Word","Quantity-Numeral"), exclude=""))
	View(T_short)
  
	#Overall Results (ages 5-9) results in Hauck-Donner effect for Age because ceiling effect
	summary(Map_t<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair, tobit(Upper = 1), data = T_short))
	
	# Reference scatterplots for kids > 9! 
	
	#BELOW # AT CEILING ALSO SUPPORTS THAT
	Map_Inc_9 <- subset(Map_Inc, Map_Inc$Age_Rounded >=9)
	wilcox.test(Map_Inc_9$AvgCorrect_Total, mu = .25, alternative = "greater") #V = 528, p-value = 3.199e-07 compared to chance (0.25) using Wilcoxon signed rank test 

	#9-year-olds’ Performance at Ceiling 
	Ceil <- Map_Inc_9$SumCorrectTotal_All
	All <- 51 #ceiling performance 
	Var <- length(which(Ceil>= All)) #number of observations equal to ceiling 
	N <- nrow(Map_Inc_9) #number of total observations
	(Var/N)*100 #41% of 9-year-olds performed at ceiling (answered all 51 trials correctly)

	
	#Subsetted data to only 5-8 year olds no longer any Hauck-Donner effects
	Map_58 <- subset(T_short, T_short$Age_Rounded <=8)
	View(Map_58)
	#Without a Modality:Timing interaction, Modality is significant. 
	summary(Map_58_noI<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair, tobit(Upper = 1), data = Map_58))
	#Including Modality:Timing interaction makes the effect of modality disappear
	summary(Map_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair + Modality:Timing, tobit(Upper = 1), data = Map_58))
	summary(Map_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + MapPair_refQW + Modality:Timing, tobit(Upper = 1), data = Map_58))
	
	# NEED TO CHECK MODEL FIT, CODE FROM TOBIT RESOURCE NOT WORKING...AND WILL NEED TO EDIT TOBIT TABLES TO INCLUDE R SQUARED!
	
	#Why Modality no longer significant?: ASL later driving this, they are later exposed to language compared to English later (suggesting later exposed kids driving modality effect overall see in above model). CONFIRMED WITH BELOW T-TEST:
	
	t.test(AL_Inc$AvgCorrect_Total, EL_Inc$AvgCorrect_Total, paired = FALSE, alternative = "two.sided")
	#Welch Two Sample t-test: t = -1.0775, df = 94.26, p-value = 0.284, 0.85 for AL vs 0.88 for EL
	
	# ADD DESCRIPTIVE STATS FOR AGE OF LANG EXPOSURE
	#Age of Language Exposure
	mean(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
	aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, mean)
	sd(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
	aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, sd)
	range(Total_Inc_Study$Age.of.Exposure..mo..Language, na.rm=TRUE) 
	aggregate(Age.of.Exposure..mo..Language ~ Group_4cat, data=Total_Inc_Study, range)
	
	
	
	
	a <- ggplot(data = Map_Inc, mapping = aes(x=Age_Rounded, y=AvgCorrect_Total, shape = Timing, color = Timing)) + geom_point() + geom_smooth(method="loess") + labs(x="Age (years)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(5, 9), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9)) + scale_shape_manual(name="Language Timing", values=c(16, 17), labels=c("Early (97)", "Later (102)")) + scale_color_manual(name="Language Timing", values=c("deepskyblue3", "firebrick3"), labels=c("Early (97)", "Later (102)"))
	a
	
	b <- ggplot(data = Map_Inc, mapping = aes(x=Age_Rounded, y=AvgCorrect_Total, shape = Modality, color = Modality)) + geom_point() + geom_smooth(method="loess") + labs(x="Age (years)", y="Proportion Correct") + theme(legend.position = "top", text = element_text(size=14)) + coord_cartesian(xlim = c(5, 9), ylim= c(0,1)) + scale_y_continuous(breaks=c(0, 0.2, 0.4, 0.6, 0.8, 1)) + scale_x_continuous(breaks=c(5, 6, 7, 8, 9)) + scale_shape_manual(name="Language Modality", values=c(16, 17), labels=c("English (95)", "ASL (104)")) + scale_color_manual(name="Language Modality", values=c("tan2", "forestgreen"), labels=c("English (95)", "ASL (104)"))
	b

	#Beeswarm Boxplots
	c <- ggplot(data=Map_Inc, mapping = aes(x= Timing, y=AvgCorrect_Total)) + geom_boxplot() + geom_dotplot(mapping=aes(fill=Timing, color=Timing), dotsize = .8, method = "dotdensity", binaxis = "y", stackdir = "center") + theme(legend.position="top", text = element_text(size=14), axis.title.x=element_blank()) + ylab("Proportion Correct") + scale_fill_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (97)", "Later (102)")) + scale_color_manual(name = "Language Timing", breaks=c("Early", "Later"), values=c("deepskyblue3", "firebrick3"), labels=c("Early (97)", "Later (102)"))+ stat_summary(fun=mean, geom="point", shape=18, size=5, color="black") 
	c
	mean(Early$AvgCorrect_Total) #0.9230928
	mean(Later$AvgCorrect_Total) #0.8606863
	
	d <- ggplot(data=Map_Inc, mapping = aes(x= Modality, y=AvgCorrect_Total)) + geom_boxplot() + geom_dotplot(mapping=aes(fill=Modality, color=Modality), dotsize = .8, method = "dotdensity", binaxis = "y", stackdir = "center") + theme(legend.position="top", text = element_text(size=14), axis.title.x=element_blank()) + ylab("Proportion Correct") + scale_fill_manual(name = "Language Modality", breaks=c("English", "ASL"), values=c("tan2", "forestgreen"), labels=c("English (95)", "ASL (104)")) + scale_color_manual(name = "Language Modality", breaks=c("English", "ASL"), values=c("tan2", "forestgreen"), labels=c("English (95)", "ASL (104)"))+ stat_summary(fun=mean, geom="point", shape=18, size=5, color="black") 
	d
	mean(English$AvgCorrect_Total) #0.8963158
	mean(ASL$AvgCorrect_Total) #0.8863462

	# LEADS INTO EXAMINING CONTINUOUS VS 2 GROUP CATEGORIZATION:
	
	# DO SIMILIAR TOBIT MODELS BUT WITH AGE OF LANGUAGE EXPOSURE/AGE OF AUDITORY EXPOSURE
	
	summary(Map_58_Age_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + MapPair + Modality:Timing, tobit(Upper = 1), data = Map_58)) #CHANGE THIS TO CONTINUOUS VARIABLES, CHECK WITH AND WITHOUT INTERACTION!
	
	
	#Creating HTML tables, Resource: https://strengejacke.github.io/sjPlot/articles/tab_model_estimates.html
	install.packages("sjPlot")
	install.packages("sjmisc")
	install.packages("sjlabelled")
	library(sjPlot)
	library(sjmisc)
	library(sjlabelled)
	
	tab_model(Map_58_I, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_I, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Medium", "Large", "Quantity-Numeral", "Quantity-Word", "Modality (English):Timing (Later)"), dv.labels = c("Reference groups: Small and Numeral-Word"), string.p = "p-Value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value
	tab_model(Map_58_I_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY
	tab_model(Map_58_I_ref, auto.label = FALSE, show.ci = FALSE, show.se = TRUE, show.stat = TRUE, show.est = TRUE, pred.labels = c("Intercept 1", "Intercept 2","Age", "SES", "Modality (English)", "Timing (Later)", "Small", "Large", "Numeral-Word", "Quantity-Numeral", "Modality (English):Timing (Later)"), dv.labels = c("Reference groups: Medium and Quantity-Word"), string.p = "p-Value", string.se = "Standard Error", string.stat = "t-statistic") #Then edit in word to add R squared value

	
	#BY MAPPING PAIRS 
	QW_58 <- subset(Map_58, Map_58$MapPair == "Quantity-Word")
	View(QW_58)
	QN_58 <- subset(Map_58, Map_58$MapPair == "Quantity-Numeral")
	View(QN_58)
	NW_58 <- subset(Map_58, Map_58$MapPair == "Numeral-Word")
	View(NW_58)
	
	summary(QW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = QW_58))
	summary(QW_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = QW_58))
	summary(QN_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = QN_58))
	summary(QN_58_I_ref<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = QN_58))
	
	#HAUCK DONNER IN AGE FOR NUMERAL-WORD MODELS! HOW TO PROCEED?
	
	summary(NW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size + Modality:Timing, tobit(Upper = 1), data = NW_58))
	summary(NW_58_I<- vglm(AvgCorr ~  Age_Rounded + SES + Modality + Timing + Set_Size_refM + Modality:Timing, tobit(Upper = 1), data = NW_58))
	



# HAVE NOT CHANGED TO MAKE BELOW CODES WORK YET! CHECK PACKAGES FOR OTHER MAPER TO MAKE SURE HAVE ALL HERE! 

	#Mapping Performance by Map Pairs
	QW <- Map_Inc$Sum_Quantity.Word_Word.Quantity
	QN <- Map_Inc$Sum_Quantity.Numeral_Numeral.Quantity
	NW <- Map_Inc$Sum_Numeral.Word_Word.Numeral
	Map_Inc <- data.frame(Map_Inc,QW,QN,NW)
	View(Map_Inc)
		#By TIMING
		timing_map <- ggplot(T_short, aes(MapPair, AvgCorr, fill=Timing)) + geom_boxplot() + labs(x="Mapping Pairs", y="Proportion Correct", fill = "Timing") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + scale_fill_grey(start = 0.5, end = 0.9) + theme(plot.title = element_text(color="black", size=14, family = "Calibri"), axis.title.x = element_text(color="black", size=14, family = "Calibri"), axis.text.x = element_text(color="black", size=12, family = "Calibri"), axis.title.y = element_text(color="black", size=14, family = "Calibri"), axis.text.y = element_text(color="black", size=12, family = "Calibri"), legend.title = element_text(color="black", size=14, family = "Calibri"), legend.text = element_text(color="black", size=14, family = "Calibri"))
		timing_map
		#By MODALITY
		modality_map <- ggplot(T_short, aes(MapPair, AvgCorr, fill=Modality)) + geom_boxplot() + labs(x="Mapping Pairs", y="Proportion Correct", fill = "Modality") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0)) + scale_fill_grey(start = 0.5, end = 0.9) + theme(plot.title = element_text(color="black", size=14, family = "Calibri"), axis.title.x = element_text(color="black", size=14, family = "Calibri"), axis.text.x = element_text(color="black", size=12, family = "Calibri"), axis.title.y = element_text(color="black", size=14, family = "Calibri"), axis.text.y = element_text(color="black", size=12, family = "Calibri"), legend.title = element_text(color="black", size=14, family = "Calibri"), legend.text = element_text(color="black", size=14, family = "Calibri"))
		modality_map



# SET SIZE VISUALIZATIONS?????



*************************************************************************************

# OLD CODES BELOW # 


#MIXED EFFECTS LOGISTIC REGRESSION
	Map_long <- pivot_longer(data = Map_Inc, cols=c(ends_with("Answer")), names_to = c("Type"), values_to = "Quantity")
	View(Map_long)
	Map_long1 <- Map_long[,!grepl("^Item",names(Map_long))] # delete columns that contain “item” 
	View(Map_long1)
	Map_long2 <- pivot_longer(data = Map_Inc, cols=c(ends_with("Correct.")), names_to = c("Type2"), values_to = "Correct")
	Map_long2 <- Map_long2[,!grepl("^Item",names(Map_long2))] # delete columns that contain “item” 
	View(Map_long2)
	Map_longest <- cbind(Map_long, Map_long2$Correct)
	View(Map_longest)
	Map_short <- Map_longest[,!grepl("^Item",names(Map_longest))] # delete columns that contain “item” 
	View(Map_short)
	names(Map_short)[names(Map_short) == "Map_long2$Correct"] <- "Correct"
	View(Map_short)
	
            # From Type column, create a new column (Map_Pair)
            #Create new column for which IF Map_short$Type contains “NW” or “WN”, assign value “Numeral-Word”
            Map_Pair <- c()
            for(i in 1:10149)
            Map_Pair[i] <- ifelse(grepl("NW", Map_short$Type[i]), "Numeral-Word", ifelse(grepl("WN", Map_short$Type[i]), "Numeral-Word", ifelse(grepl("QN", Map_short$Type[i]), "Quantity-Numeral", ifelse(grepl("NQ", Map_short$Type[i]), "Quantity-Numeral", ifelse(grepl("QW", Map_short$Type[i]), "Quantity-Word", ifelse(grepl("WQ", Map_short$Type[i]), "Quantity-Word","bananas"))))))
            Map_short <- cbind(Map_short, Map_Pair)
            View(Map_short)

            #From Quantity column, create Small, Med, Large
            Set_Size <- c()
            Set_Size <- case_when(Map_short$Quantity <= 3 ~ 'Small',
                                  Map_short$Quantity > 3 & Map_short$Quantity<= 5 ~ 'Medium',
                                  Map_short$Quantity > 5 ~ 'Large')
            Map_short <- cbind(Map_short,Set_Size)
	    names(Map_short)[names(Map_short) == "Map_long2$Correct"] <- "Correct"
            View(Map_short)
	    Map_short$SetSize_refM <- as.factor(factor(as.character(Map_short$Set_Size), levels=c("Medium", "Small", "Large"), exclude=""))
	    Map_short$MapPair_refQW <- as.factor(factor(as.character(Map_short$Map_Pair), levels=c("Quantity-Word","Numeral-Word","Quantity-Numeral"), exclude=""))
	    View(Map_short)   
	    
#Running Mixed Effects Logistic Regressions
	    #Mixed Log Reg for Set Size, Map Pair, Timing, Modality
	    MixReg_MT <- glmer(Correct ~ Age_Rounded + SES + Set_Size + Map_Pair + Timing + Modality + (1 | SUBJECT_ID), data = Map_short, family = binomial, control = glmerControl(optimizer ="bobyqa"), nAGQ = 10) #AIC 5114
	    summary(MixReg_MT)
	  
	    #References (changed Set Size and Map Pair)
	    MixReg_MT_ref <- glmer(Correct ~ Age_Rounded + SES + SetSize_refM + MapPair_refQW + Timing + Modality + (1 | SUBJECT_ID), data = Map_short, family = binomial, control = glmerControl(optimizer ="bobyqa"), nAGQ = 10)
	    summary(MixReg_MT_ref)
	    
	    #Creating HTML Tables
	    #Resource: https://strengejacke.github.io/sjPlot/articles/tab_model_estimates.html
		install.packages("sjPlot")
		install.packages("sjmisc")
		install.packages("sjlabelled")
		library(sjPlot)
		library(sjmisc)
		library(sjlabelled)
	    
	   tab_model(MixReg_MT, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY    
	   tab_model(MixReg_MT, auto.label = FALSE, show.icc = FALSE, show.se = TRUE, show.ci = FALSE, show.re.var = FALSE, show.stat = TRUE, pred.labels = c("Intercept", "Age", "SES", "Medium", "Small", "Quantity-Numeral", "Quantity-Word", "Timing (Later)", "Modality (English)"), dv.labels = c("References: Large and Numeral-Word"), string.p = "P-Values", string.se = "Standard Errors", string.stat = "t Statistic") #Edit to look pretty in Word
	   tab_model(MixReg_MT_ref, auto.label = FALSE, show.ci = FALSE) #TO CHECK VARIABLE NAMES TO ENSURE RENAMING ACCURATELY 
	   tab_model(MixReg_MT_ref, auto.label = FALSE, show.icc = FALSE, show.se = TRUE, show.ci = FALSE, show.re.var = FALSE, show.stat = TRUE, pred.labels = c("Intercept", "Age", "SES", "Small", "Large", "Numeral-Word", "Quantity-Numeral", "Timing (Later)", "Modality (English)"), dv.labels = c("References: Medium and Quantity-Word"), string.p = "P-Values", string.se = "Standard Errors", string.stat = "t Statistic") #Edit to look pretty in Word

	#Why is Modality significant here and no where else?, Pearson's Chi-squared tests on binary outcome 
	chisq.test(Map_short$Correct, Map_short$Group_4cat) #X-squared = 118.65, df = 3, p-value < 2.2e-16
	table(Map_short$Correct, Map_short$Group_4cat) #ASL Later has substantially more 0s than other groups, inproportionate 
	
	ASL_log <- subset(Map_short, Map_short$Modality == "ASL")
	English_log <- subset(Map_short, Map_short$Modality == "English")
	chisq.test(ASL_log$Correct, ASL_log$Timing)  #X-squared = 93.661, df = 1, p-value < 2.2e-16, ASL Early and ASL Later differ
	chisq.test(English_log$Correct, English_log$Timing) #X-squared = 19.511, df = 1, p-value = 1e-05, English Early and English later differ 


	#BOXPLOTS/VIOLINS
	map.n <- function(x){return(c(y = median(x)*1.05, label = length(x))) }
	mean.n <- function(x){return(c(y= median(x)*0.97, label = round(mean(x), 2)))} 
	#Overall performance: Proportion Correct by Modality (boxplot/violin)
	ggplot(Map_Inc, aes(x=Modality, y=AvgCorrect_Total, fill = Modality)) + geom_violin() + geom_boxplot(width = 0.2) + labs (x= "Language Modality", y = "Proportion Correct") + scale_fill_grey(start = 0.5, end = 0.9) + stat_summary(fun.data = mean.n, geom = "text", fun = median) + stat_summary(fun.data = mean.n, geom= "text", fun=mean, color= "black") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0))  + theme(legend.position = "none", axis.title.x = element_text(color="black", size=14, family = "Calibri"), axis.text.x = element_text(color="black", size=12, family = "Calibri"), axis.title.y = element_text(color="black", size=14, family = "Calibri"), axis.text.y = element_text(color="black", size=12, family = "Calibri"))
	#Overall performance: Proportion Correct by Timing (boxplot/violin)
	ggplot(Map_Inc, aes(x=Timing, y=AvgCorrect_Total, fill = Timing)) + geom_violin() + geom_boxplot(width = 0.2) + labs (x= "Language Timing", y = "Proportion Correct") + scale_fill_grey(start = 0.5, end = 0.9) + stat_summary(fun.data = mean.n, geom = "text", fun = median) + stat_summary(fun.data = mean.n, geom= "text", fun=mean, color= "black") + scale_y_continuous (breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), limits = c(0,1), expand = c(0,0))  + theme(legend.position = "none", axis.title.x = element_text(color="black", size=14, family = "Calibri"), axis.text.x = element_text(color="black", size=12, family = "Calibri"), axis.title.y = element_text(color="black", size=14, family = "Calibri"), axis.text.y = element_text(color="black", size=12, family = "Calibri"))
