####HEARING KIDS ONLY####

## MEDIATION CODES ##

setwd("~/Desktop")
getwd()

Mapping <- read.csv("Mapping_Coding_CH_191119.csv", na.strings = "N/A")
Map_HBE <- subset(Mapping, Mapping$Including.in.Study == 'Yes' & Mapping$Coded. == "Yes" & Mapping$Hearing_Cat == 'Hearing')

## IF SEPARATING BY AGE GROUPS ##
Map_HBE$AgeGrp <- ifelse(Map_HBE$Age_Rounded < 7, "5- and 6-year-olds", "7 and up")
Map56 <- subset(Map_HBE, Map_HBE$AgeGrp =="5- and 6-year-olds")
Map7up <- subset(Map_HBE, Map_HBE$AgeGrp =="7 and up")
-------------------------------------------------------------------------------------------------------------

##SETTING UP DATA FRAME FOR LOGISTIC REGRESSION##
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
library(tidyr)

setwd("~/Desktop")

Map <- read.csv("Mapping_HBE_RegressionData.csv", na.strings = "N/A") #ALREADY ONLY HBE INCLUDING IN STUDY! 
#ADD AGE GRP COLUMN#
Map$AgeGrp <- ifelse(Map$Age_Rounded < 7, "5- and 6-year-olds", "7 and up")
View(Map)

Quantity_cols <- colnames(select(Map, ends_with("Answer")))
Correct_cols <- colnames(select(Map, ends_with("Correct.")))

Quant_Corr <- c()# Create new empty list
for(i in 1:51)
Quant_Corr[i] <- paste(names(select(Map, contains(match=Quantity_cols[i]))), names(select(Map, contains(match=Correct_cols[i]))), sep=("."))

#Want wide → long, use tidyr's pivot_longer() 
#resource https://cran.r-project.org/web/packages/tidyr/vignettes/pivot.html

#Create df for Quantity 
HBE_long <- pivot_longer(data = Map, cols=c(ends_with("Answer")), names_to = c("Type"), values_to = "Quantity")
View(HBE_long)

#Create df for Correct
HBE_long2 <- pivot_longer(data = Map, cols=c(ends_with("Correct.")), names_to = c("Type2"), values_to = "Correct")
View(HBE_long2)

#Combine 2 df into short one (ensure all Quantity-Correct match for each kid!)
HBE_long3 <- cbind(HBE_long, HBE_long2)
View(HBE_long3)
HBE_short <- HBE_long3[,!grepl("^Item",names(HBE_long3))] # delete columns that contain “item” 

HBE_short<- HBE_short[c(-10,-11,-12,-13,-14,-15,-16,-17)] # getting rid of double info
View(HBE_short)

# From Type column, create a new column (Map_Type) extracting the “QN” etc part
#Create new column for which IF HBE_short$Type contains “NW” or “WN”, assign value “Numeral-Word”
Map_Pair <- c()
for(i in 1:2142)
Map_Pair[i] <- ifelse(grepl("NW", HBE_short$Type[i]), "Numeral-Word", ifelse(grepl("WN", HBE_short$Type[i]), "Numeral-Word", ifelse(grepl("QN", HBE_short$Type[i]), "Quantity-Numeral", ifelse(grepl("NQ", HBE_short$Type[i]), "Quantity-Numeral", ifelse(grepl("QW", HBE_short$Type[i]), "Quantity-Word", ifelse(grepl("WQ", HBE_short$Type[i]), "Quantity-Word","bananas"))))))

#Create new column for Map Types
Map_Type<- c()
for(i in 1:2142)
Map_Type[i] <- ifelse(grepl("NW", HBE_short$Type[i]), "Word-to-Numeral", ifelse(grepl("WN", HBE_short$Type[i]), "Numeral-to-Word", ifelse(grepl("QN", HBE_short$Type[i]), "Numeral-to-Quantity", ifelse(grepl("NQ", HBE_short$Type[i]), "Quantity-to-Numeral", ifelse(grepl("QW", HBE_short$Type[i]), "Word-to-Quantity", ifelse(grepl("WQ", HBE_short$Type[i]), "Quantity-to-Word","bananas"))))))


HBE_short2 <- cbind(HBE_short, Map_Pair, Map_Type)
View(HBE_short2)

#From Quantity column, create Small, Med, Large
# resource https://stackoverflow.com/questions/15016723/how-to-add-column-into-a-dataframe-based-on-condition

Set_Size <- c()
Set_Size <- case_when(HBE_short$Quantity <= 3 ~ 'Small',
                      HBE_short$Quantity > 3 & HBE_short$Quantity<= 5 ~ 'Medium',
                      HBE_short$Quantity > 5 ~ 'Large')

HBE_short3 <- cbind(HBE_short2,Set_Size)
View(HBE_short3)


#Mixed Effects Logistic Regression
install.packages("lme4")
library(lme4)
REG <- glmer(Correct ~ Age_Rounded + SES_range_8_to_66 + Set_Size + Map_Pair + Race + Ethnicity + M.F + (1 | SUBJECT_ID), data = HBE_short3, family = binomial, control = glmerControl(optimizer = "bobyqa"),  nAGQ = 10) #AIC and BIC are numbers for model fit (lower when include race, ethnicity, and sex… lower = better)
summary(REG)
#Without glmerControl() argument model has many scary warnings
# nAGQ is something like number of iterations, anything >1 is better, takes longer to run (10 took about a minute to run on 2000 trials)

exp(fixef(REG)) #provides Odds Ratios

---------------------------------------------------------------------------------
#Direct Regressions

setwd("~/Desktop")

Mapping <- read.csv("Mapping_Coding_CH_191119.csv", na.strings = "N/A")
Map_HBE <- subset(Mapping, Mapping$Including.in.Study == 'Yes' & Mapping$Coded. == "Yes" & Mapping$Hearing_Cat == 'Hearing')

## IF SEPARATING BY AGE GROUPS AND RUNNING CORPLOT ##
Map_HBE$AgeGrp <- ifelse(Map_HBE$Age_Rounded < 7, "5", "7")
View(Map_HBE)

#DIRECT REGRESSIONS
install.packages("QuantPsyc") #for beta values
library(QuantPsyc)
#SOURCE Controlling for variables: https://stats.stackexchange.com/questions/17336/how-exactly-does-one-control-for-other-variables

agecovariate <- Map_HBE$AgeGrp

#DIRECT REG: NW PREDICT QN?#
NW_QN_reg <- lm(Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral~Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity + agecovariate)
summary(NW_QN_reg) 
lm.beta(NW_QN_reg)

#DIRECT REG: QN PREDICT NW?#
QN_NW_reg <- lm(Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity ~ Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral + agecovariate)
summary(QN_NW_reg ) 
lm.beta(QN_NW_reg)

#DIRECT REG: QW PREDICT QN?#
QW_QN_reg <-lm(Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity~Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity + agecovariate)
summary(QW_QN_reg) 
lm.beta(QW_QN_reg)

#DIRECT REG: QN PREDICT QW?#
QN_QW_reg <-lm(Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity~Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity + agecovariate)
summary(QN_QW_reg) 
lm.beta(QN_QW_reg)

#DIRECT REG: NW PREDICT QW?#
NW_QW_reg <-lm(Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral~Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity + agecovariate)
summary(NW_QW_reg) 
lm.beta(NW_QW_reg)

#DIRECT REG: QW PREDICT NW?#
QW_NW_reg <-lm(Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity~Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral + agecovariate)
summary(QW_NW_reg) 
lm.beta(QW_NW_reg)

# DIRECT REGRESSIONS FOR AGES (NOT INCLUDE AGE COVARIATE)
#DIRECT REG: NW & QN BY AGES#
NW_QN_56reg <- lm(Map56$AvgCorrect_Numeral.Word_Word.Numeral~Map56$AvgCorrect_Quantity.Numeral_Numeral.Quantity)
summary(NW_QN_56reg)
NW_QN_7reg <- lm(Map7up$AvgCorrect_Numeral.Word_Word.Numeral~Map7up$AvgCorrect_Quantity.Numeral_Numeral.Quantity)
summary(NW_QN_7reg) 

#DIRECT REG: QW & QN BY AGES#
QW_QN_56reg <-lm(Map56$AvgCorrect_Quantity.Word_Word.Quantity~Map56$AvgCorrect_Quantity.Numeral_Numeral.Quantity)
summary(QW_QN_56reg) 
lm.beta(QW_QN_56reg)
QW_QN_7reg <-lm(Map7up$AvgCorrect_Quantity.Word_Word.Quantity~Map7up$AvgCorrect_Quantity.Numeral_Numeral.Quantity)
summary(QW_QN_7reg) 
lm.beta(QW_QN_7reg)

#DIRECT REG: NW & QW BY AGES#
NW_QW_56reg <-lm(Map56$AvgCorrect_Quantity.Word_Word.Quantity~Map56$AvgCorrect_Numeral.Word_Word.Numeral)
summary(NW_QW_56reg) 
lm.beta(NW_QW_56reg)
NW_QW_7reg <-lm(Map7up$AvgCorrect_Quantity.Word_Word.Quantity~Map7up$AvgCorrect_Numeral.Word_Word.Numeral)
summary(NW_QW_7reg) 
lm.beta(NW_QW_7reg)

## SEPARATING BY SET SIZES & CONTROLLING FOR AGE##
#DIRECT REG: NW & QN BY SET SIZES#
NW_QN_sm_reg <- lm(Map_HBE$AvgCorrect_Sm_WN~Map_HBE$AvgCorrect_Sm_QN + agecovariate)
summary(NW_QN_sm_reg) #NOT SIG
NW_QN_med_reg <- lm(Map_HBE$AvgCorrect_Med_WN~Map_HBE$AvgCorrect_Med_QN + agecovariate)
summary(NW_QN_med_reg) #NOT SIG
NW_QN_lrg_reg <- lm(Map_HBE$AvgCorrect_Lrg_WN~Map_HBE$AvgCorrect_Lrg_QN + agecovariate)
summary(NW_QN_lrg_reg) #NOT SIG

#DIRECT REG: QW & QN BY SET SIZES#
QW_QN_sm_reg <-lm(Map_HBE$AvgCorrect_Sm_QW~Map_HBE$AvgCorrect_Sm_QN + agecovariate)
summary(QW_QN_sm_reg) #SIG
QW_QN_med_reg <-lm(Map_HBE$AvgCorrect_Med_QW~Map_HBE$AvgCorrect_Med_QN + agecovariate)
summary(QW_QN_med_reg) #SIG
QW_QN_lrg_reg <-lm(Map_HBE$AvgCorrect_Lrg_QW~Map_HBE$AvgCorrect_Lrg_QN + agecovariate)
summary(QW_QN_lrg_reg) #SIG

#DIRECT REG: NW & QW#
NW_QW_sm_reg <-lm(Map_HBE$AvgCorrect_Sm_WN~Map_HBE$AvgCorrect_Sm_QW + agecovariate)
summary(NW_QW_sm_reg) #NOT SIG!
NW_QW_med_reg <-lm(Map_HBE$AvgCorrect_Med_WN~Map_HBE$AvgCorrect_Med_QW + agecovariate)
summary(NW_QW_med_reg) #NOT SIG!
NW_QW_lrg_reg <-lm(Map_HBE$AvgCorrect_Lrg_WN~Map_HBE$AvgCorrect_Lrg_QW + agecovariate)
summary(NW_QW_lrg_reg) #NOT SIG!

-------------------------------------------------------------------------
# OLD SHIZ #
# BIVARIATE CORRELATIONS. RESOURCE: http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software # 
#ONLY WORKS WITH OLD VERSION OF R
install.packages("Hmisc") 
library(Hmisc)
COR <- data.frame(Map_HBE$Sum_Quantity.Numeral_Numeral.Quantity, Map_HBE$Sum_Quantity.Word_Word.Quantity, Map_HBE$Sum_Numeral.Word_Word.Numeral, Map_HBE$AgeGrp)
View(COR)
CORPLOT <- rcorr(as.matrix(COR)) #had to change age group to only be numbers for this to work! 
CORPLOT
# Extract the correlation coefficients
CORPLOT$r
# Extract p-values
CORPLOT$P

# Mediation Analysis COMPARING TO HURST ANALYSIS
install.packages("mediation")
library(mediation)
# https://cran.r-project.org/web/packages/mediation/vignettes/mediation.pdf
# https://data.library.virginia.edu/introduction-to-mediation-analysis/
# Emily’s Codes https://github.com/emlini/SLAM-Data-Analysis/blob/master/GiveN_Models_Residuals_Mediation_190304.R

Map_HBE$AgeGrp <- ifelse(Map_HBE$Age_Rounded < 7, "5", "7")
agecovariate <- Map_HBE$AgeGrp

#WAS WORKING THROUGH BELOW... COULD NEVER GET TO WORK: 
#https://towardsdatascience.com/doing-and-reporting-your-first-mediation-analysis-in-r-2fe423b92171
#ANSWERING IF NW MEDIATES QW AND QN#
# 1. Test direct path from QN to QW
QN_QW_reg <-lm(Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity ~ Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity + agecovariate) 
summary(QN_QW_reg) #R-squared:  0.5532, F-statistic: 26.39 on 2 and 39 DF,  p-value: 5.661e-08
# 2. Test direct path from QN to NW
QN_NW_reg <<-lm(Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity ~ Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral + agecovariate)  
summary(QN_NW_reg) #R-squared:  0.2944, F-statistic: 9.555 on 2 and 39 DF,  p-value: 0.0004197
#3. TEST DIRECT PATH FROM QW TO QN WITH NW AS MEDIATOR (controlling for age and word–numeral performance)
#model.m <- lm(job_seek ~ treat) 
#model.y <- lm(depress2 ~ treat) 
#med.cont <- mediate(model.m, model.y, sims=1000, treat = "treat", mediator = "job_seek")
NW <- Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral
QN <- Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity
ARGH <- mediate(QN_QW_reg, QN_NW_reg, sims=1000, boot=TRUE, treat=QN, mediator=NW, control=NULL)
# Running nonparametric bootstrap Error in `[<-.data.frame`(`*tmp*`, , treat, value = 1):  duplicate subscripts for columns #SAYS DUE TO N/As?

results <- mediate((QN_QW_reg, QN_NW_reg,treat='QN', mediator='NW’, covariates = c("agecovariate", "NW"), boot = TRUE, sims = 1000, conf.level = 0.95, control.value = 0))
Error: unexpected ',' in "results <- mediate((QN_QW_reg,"

#PREVIOUS CODES...
#1. TEST DIRECT PATH FROM QW TO NW, HURST WAS SIG#
QW_NW_reg <-lm(Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity~Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral + agecovariate)
summary(QW_NW_reg)
lm.beta(QW_NW_reg)
#2. TEST DIRECT PATH FROM NW to QN (controlling for age and quantity–word performance), HURST WAS SIG
QWcovariate <- Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity
NW_QN_reg <- lm(Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral~Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity + agecovariate + QWcovariate)
summary(NW_QN_reg)
lm.beta(NW_QN_reg)

#3. TEST DIRECT PATH FROM QW TO QN (controlling for age and word–numeral performance) AND INCLUDING MEDIATOR OF NW #HURST NOT SIG
NWcovariate <- Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral
QW<- Map_HBE$AvgCorrect_Quantity.Word_Word.Quantity
#We want to know whether NW mediates relationship btwn QW and QN
QN ~ QW + age
NW ~ QW + QN 
QW_NW_reg <-lm(QW ~ NWcovariate + agecovariate)
NW_QN_reg <- lm(Map_HBE$AvgCorrect_Numeral.Word_Word.Numeral~Map_HBE$AvgCorrect_Quantity.Numeral_Numeral.Quantity + agecovariate + QWcovariate)






