####HEARING KIDS ONLY####

## MEDIATION CODES ##

setwd("~/Desktop")
getwd()

Mapping <- read.csv("Mapping_Coding_CH_191119.csv", na.strings = "N/A")
Map_HBE <- subset(Mapping, Mapping$Including.in.Study == 'Yes' & Mapping$Coded. == "Yes" & Mapping$Hearing_Cat == 'Hearing')

## IF SEPARATING BY AGE GROUPS ##
Map_HBE$AgeGrp <- ifelse(Map_HBE$Age_Rounded < 6, "5", "6")
Map5 <- subset(Map_HBE, Map_HBE$AgeGrp =="5")
Map6up <- subset(Map_HBE, Map_HBE$AgeGrp =="6")
View(Map_HBE)

# BIVARIATE CORRELATIONS. RESOURCE: http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software # 
#ONLY WORKS WITH OLD VERSION OF R
install.packages("Hmisc") 
library(Hmisc)
COR <- data.frame(Map_HBE$Sum_Quantity.Numeral_Numeral.Quantity, Map_HBE$Sum_Quantity.Word_Word.Quantity, Map_HBE$Sum_Numeral.Word_Word.Numeral, Map_HBE$AgeGrp)
View(COR)
CORPLOT <- rcorr(as.matrix(COR)) #had to change age group to only be numbers for this to work! 
CORPLOT
# Extract the correlation coefficients
CORPLOT$r
# Extract p-values
CORPLOT$P
-------------------------------------------------------------------------------------------------------------

##SETTING UP DATA FRAME FOR LOGISTIC REGRESSION##
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
library(tidyr)

setwd("~/Desktop")

Map <- read.csv("Mapping_HBE_RegressionData.csv", na.strings = "N/A") #ALREADY ONLY HBE INCLUDING IN STUDY! 
#ADD AGE GRP COLUMN#
Map$AgeGrp <- ifelse(Map$Age_Rounded < 6, "5", "6")
View(Map)

Quantity_cols <- colnames(select(Map, ends_with("Answer")))
Correct_cols <- colnames(select(Map, ends_with("Correct.")))

Quant_Corr <- c()# Create new empty list
for(i in 1:51)
Quant_Corr[i] <- paste(names(select(Map, contains(match=Quantity_cols[i]))), names(select(Map, contains(match=Correct_cols[i]))), sep=("."))

#Want wide → long, use tidyr's pivot_longer() 
#resource https://cran.r-project.org/web/packages/tidyr/vignettes/pivot.html

#Create df for Quantity 
HBE_long <- pivot_longer(data = Map, cols=c(ends_with("Answer")), names_to = c("Type"), values_to = "Quantity")
View(HBE_long)

#Create df for Correct
HBE_long2 <- pivot_longer(data = Map, cols=c(ends_with("Correct.")), names_to = c("Type2"), values_to = "Correct")
View(HBE_long2)

#Combine 2 df into short one (ensure all Quantity-Correct match for each kid!)
HBE_long3 <- cbind(HBE_long, HBE_long2)
View(HBE_long3)
HBE_short = HBE_long3[,!grepl("^Item",names(HBE_long3))] # delete columns that contain “item” 
HBE_short = select(HBE_short, -10:-16) # getting rid of double IDs
View(HBE_short)

# From Type column, create a new column (Map_Type) extracting the “QN” etc part
#Create new column for which IF HBE_short$Type contains “NW” or “WN”, assign value “Numeral-Word”
Map_Type <- c()
for(i in 1:2142)
Map_Type[i] <- ifelse(grepl("NW", HBE_short$Type[i]), "Numeral-Word", ifelse(grepl("WN", HBE_short$Type[i]), "Numeral-Word", ifelse(grepl("QN", HBE_short$Type[i]), "Quantity-Numeral", ifelse(grepl("NQ", HBE_short$Type[i]), "Quantity-Numeral", ifelse(grepl("QW", HBE_short$Type[i]), "Quantity-Word", ifelse(grepl("WQ", HBE_short$Type[i]), "Quantity-Word","bananas"))))))

HBE_short2 <- cbind(HBE_short, Map_Type)
View(HBE_short2)

#From Quantity column, create Small, Med, Large
# resource https://stackoverflow.com/questions/15016723/how-to-add-column-into-a-dataframe-based-on-condition

Set_Size <- c()
Set_Size <- case_when(HBE_short$Quantity <= 3 ~ 'Small',
                      HBE_short$Quantity > 3 & HBE_short$Quantity<= 5 ~ 'Medium',
                      HBE_short$Quantity > 5 ~ 'Large')

HBE_short3 <- cbind(HBE_short2,Set_Size)
View(HBE_short3)


#Mixed Effects Logistic Regression
install.packages(“lme4”)
library(lme4)
REG <- glmer(Correct ~ AgeGrp + SES_range_8_to_66 + Set_Size + Map_Type + Race + Ethnicity + M.F + (1 | SUBJECT_ID), data = HBE_short3, family = binomial, control = glmerControl(optimizer = "bobyqa"),  nAGQ = 10) #AIC and BIC are numbers for model fit (lower when include race, ethnicity, and sex… lower = better)
summary(REG)
#Without glmerControl() argument model has many scary warnings
# nAGQ is something like number of iterations, anything >1 is better, takes longer to run (10 took about a minute to run on 2000 trials)

exp(fixef(REG)) #provides Odds Ratios

#Mediation Analysis




