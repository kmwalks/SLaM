#Descriptive Statistics
      #Subset group want ex. EE
      #summary of variable want within that group ex. summary(EE$Sex) 
  #To get number of observations for each group
      #sum(MC_GiveN$LanguageGroup == 'English Early', na.rm=TRUE)
      #from entire dataset: sum(MC$Group_4cat == 'ASL Early', na.rm=TRUE)
      #obtain Including in study NA: IncStudy_NA <- subset(MC, MC$Including_in_study == "" | is.na(MC$Including_in_study))
      #obtain Including in study No: IncStudy_No <- subset(MC, MC$Including_in_study == "No")
      #obtain Including in study Yes & pull from this for other variable missing data info: IncStudy <- subset(MC, MC$Including_in_study == "Yes")
      #Missing Give-N: GN_NA <- subset(IncStudy, IncStudy$GiveN_ALL_ceiling_conservative == "NA" | is.na(IncStudy$GiveN_ALL_ceiling_conservative | IncStudy$GiveN_ALL_ceiling_conservative == "No"))
      #Missing SES: SES_NA <- subset(IncStudy, IncStudy$SES_range_8_to_66 == "NA" | is.na(IncStudy$SES_range_8_to_66 | IncStudy$SES_range_8_to_66 == "No"))
      #Missing Age: Age_NA <- subset(IncStudy, IncStudy$Age == "NA" | is.na(IncStudy$Age | IncStudy$Age == "No"))
      #Missing EC with objects: ECw_NA <- subset(IncStudy, IncStudy$Highest_Count_wobj == "NA" | is.na(IncStudy$Highest_Count_wobj | IncStudy$Highest_Count_wobj == "No"))
      #Missing EC without objects: ECwo_NA <- subset(IncStudy, IncStudy$Highest_Count_noobj == "NA" | is.na(IncStudy$Highest_Count_noobj | IncStudy$Highest_Count_noobj == "No"))

#Table for Overall Including in Study
IncStudy <- subset(MC, MC$Including_in_study == "Yes")
View(IncStudy)
AE_Inc <- subset(IncStudy, IncStudy$Group_4cat == "ASL Early")
EL_Inc <- subset(IncStudy, IncStudy$Group_4cat == "English Later")
AL_Inc <- subset(IncStudy, IncStudy$Group_4cat == "ASL Later")
EE_Inc <- subset(IncStudy, IncStudy$Group_4cat == "English Early")
#Check for N/A in age & SES (note how many!)
mean(AE_Inc$Age, na.rm = TRUE)
sd(AE_Inc$Age, na.rm = TRUE) 
mean(AE_Inc$SES_range_8_to_66, na.rm = TRUE)
sd(AE_Inc$SES_range_8_to_66, na.rm = TRUE)

#Table for GiveN
MC_GiveN <- subset(MC, MC$GiveN_Coded. == "Yes" & MC$EC_Coded. == "Yes" & MC$GiveN_ALL_ceiling_conservative !="" & MC$Age<7 & MC$Including_in_study == "Yes")

EE <- subset(MC_GiveN, MC_GiveN$Group_4cat == "English Early") #etc! 

#Check for N/A in age & SES (note how many!)
mean(AE$Age, na.rm = TRUE)
sd(AE$Age, na.rm = TRUE) 
mean(AE$SES_range_8_to_66, na.rm = TRUE)
sd(AE$SES_range_8_to_66, na.rm = TRUE)


# P1 Demographics Analyses

      library(tidyverse) # includes ggplot2??
      library(ggplot2) # for general plots
      library(qwraps2) # for summary_table use
      library(reshape2)

      setwd("/Users/emilycarrigan/Dropbox/Data Analysis Work") ##this should be wherever your file is saved 

      Dem <- read.csv("Background_Questionnaire_MAIN_CD_190405.csv", na.strings = c("N/A", "#VALUE!", ""))
      Dem <- subset(Dem, Dem$Including.in.Study=="Yes" & Dem$Age_Rounded!="" & Dem$DOB!="" & Dem$Age_Rounded<7)
      View(Dem)

# Look at demographics by technology type (for Corina)
      CIcol <- dplyr::select(Dem, SUBJ.ID, Age_Rounded, Hearing_Tech_5cat, Age_of_Implantation_1st_CI_in_MONTHS)

      CIcol <- dplyr::filter(CIcol, Hearing_Tech_5cat =="CI")

      CIcol$Age_2cat <- ifelse(CIcol$Age_Rounded <5, "3 to 5", "5 and up")

      dplyr::count(CIcol, Age_2cat, sort = TRUE)

      ggplot(CIcol, aes(x=CIcol$Age_Rounded, y=CIcol$Age_of_Implantation_1st_CI_in_MONTHS)) + geom_point(aes(color = CIcol$Age_2cat))


## Have to ADD SES (currently not in Dem spreadhseet)

      # SES in this file
      MC <- read.csv("MASTER_Coding_EC_190315.csv", na.strings = "N/A")

#Rename columns to match
      colnames(MC)[12] <- "SES"
      colnames(MC)[4] <- "ID"
      colnames(Dem)[8] <-"ID"

      Dem <- Dem[, 1:18]

      nrow(Dem) #182 kids
      View(Dem)
      str(Dem)


      LanguageGroup <- as.factor(factor(as.character(Dem$Group_4cat), levels = c("English Early", "ASL Early", "English Later", "ASL Later"), exclude=NA))

      Dem <- cbind(Dem, LanguageGroup, CIcol)
      View(Dem)


      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = count) # gives means by group!!!

      Dem %>% group_by(LanguageGroup) %>% tally()

      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = mean) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = median) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = min) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = max) # gives means by group!!!


# ADD SES FROM MASTER CODING SS

      Small_MC <- subset(MC, select = c(ID, SES))
      View(Small_MC) # only 2 columns

      Dem2 <- merge(Dem, Small_MC, by = "ID")
      Dem2 <- subset(Dem2, Dem2$SES!="")

      View(Dem2)

      Later <- subset(Dem, Dem$Early_Later == "Later")
      View(Later)

      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = mean) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = median) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = min) # gives means by group!!!
      aggregate(formula = Dem$Age_Rounded~Dem$LanguageGroup, FUN = max) # gives means by group!!!


# Answering question about age of implantation

      # For all kids with CIs (English, ASL, Early, Later)
      CIs <- dplyr::filter(Dem, Hearing_Tech_5cat == "CI")
      View(CIs) #19 kids with CIs

      HAs <- dplyr::filter(Dem, Hearing_Tech_5cat =="HA")
      View(HAs) #55 with HAs


      #SPLIT into separate df for each and 

      Eng_Ear <- subset(Dem2, Dem2$Group_4cat=="English Early")
      View(Eng_Ear)

      ggplot(Eng_Ear, aes(x=Eng_Ear$Age_Rounded, y=..count..)) + geom_density()
      shapiro.test(Eng_Ear$Age_Rounded) # SHOULD *NOT* BE NORMALLY DISTRIBUTED but IS

      shapiro.test(Eng_Ear$SES) # SHOULD NOT BE NORMALLY DISTRIBUTED ? and is not
      ggplot(Eng_Ear, aes(x=Eng_Ear$SES, y=..count..)) + geom_density()


      summary <-
        list("Age" =
             list("min" = ~ min(.data$Age_Rounded),
                  "max" = ~ max(.data$Age_Rounded),
                  "median" = ~ median(.data$Age_Rounded),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$Age_Rounded)),
             "SES" =
             list("min" = ~ min(.data$SES),
                  "max" = ~ max(.data$SES),
                  "median" = ~ median(.data$SES),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$SES)),
             "Number (% of total)" =
             list(~ qwraps2::n_perc0(Dem2$LanguageGroup == "English Early"))
             )
      whole <- summary_table(Eng_Ear, summary)
      whole


      Eng_Lat <- subset(Dem2, Dem2$Group_4cat=="English Later")
      View(Eng_Lat)

      shapiro.test(Eng_Lat$Age_Rounded) # SHOULD *NOT* BE NORMALLY DISTRIBUTED


      ggplot(Eng_Lat, aes(x=Eng_Lat$Age_Rounded, y=..count..)) + geom_density()

      shapiro.test(Eng_Lat$SES)
      ggplot(Eng_Lat, aes(x=Eng_Lat$SES, y=..count..)) + geom_density()

      summary <-
        list("Age" =
             list("min" = ~ min(.data$Age_Rounded),
                  "max" = ~ max(.data$Age_Rounded),
                  "median" = ~ median(.data$Age_Rounded),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$Age_Rounded)),
             "SES" =
             list("min" = ~ min(.data$SES),
                  "max" = ~ max(.data$SES),
                  "median" = ~ median(.data$SES),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$SES)),
             "Number (% of total)" =
             list("meow" = ~ qwraps2::n_perc0(Dem2$LanguageGroup == "English Later"))
             )
      whole2 <- summary_table(Eng_Lat, summary)
      whole2

      ASL_Ear <- subset(Dem2, Dem2$Group_4cat=="ASL Early")
      View(ASL_Ear)

      shapiro.test(ASL_Ear$Age_Rounded) # SHOULD *NOT* BE NORMALLY DISTRIBUTED

      ggplot(ASL_Ear, aes(x=ASL_Ear$Age_Rounded, y=..count..)) + geom_density()

      shapiro.test(ASL_Ear$SES)
      ggplot(ASL_Ear, aes(x=ASL_Ear$SES, y=..count..)) + geom_density()


      summary <-
        list("Age" =
             list("min" = ~ min(.data$Age_Rounded),
                  "max" = ~ max(.data$Age_Rounded),
                  "median" = ~ median(.data$Age_Rounded),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$Age_Rounded)),
             "SES" =
             list("min" = ~ min(.data$SES),
                  "max" = ~ max(.data$SES),
                  "median" = ~ median(.data$SES),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$SES)),
             "Number (% of total)" =
             list("meow" = ~ qwraps2::n_perc0(Dem2$LanguageGroup == "ASL Early"))
             )
      whole3 <- summary_table(ASL_Ear, summary)
      whole3


      ASL_Lat <- subset(Dem2, Dem2$Group_4cat=="ASL Later")
      View(ASL_Lat)

      shapiro.test(ASL_Lat$Age_Rounded) # SHOULD *NOT* BE NORMALLY DISTRIBUTED

      ggplot(ASL_Lat, aes(x=ASL_Lat$Age_Rounded, y=..count..)) + geom_density() # MORE OLDER KIDS IN ASL Later group

      shapiro.test(ASL_Lat$SES)
      ggplot(ASL_Lat, aes(x=ASL_Lat$SES, y=..count..)) + geom_density()

      summary <-
        list("Age" =
             list("min" = ~ min(.data$Age_Rounded),
                  "max" = ~ max(.data$Age_Rounded),
                  "median" = ~ median(.data$Age_Rounded),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$Age_Rounded)),
             "SES" =
             list("min" = ~ min(.data$SES),
                  "max" = ~ max(.data$SES),
                  "median" = ~ median(.data$SES),
                  "mean (sd)" = ~ qwraps2::mean_sd(.data$SES)),
             "Number (% of total)" =
             list("meow" = ~ qwraps2::n_perc0(Dem2$LanguageGroup == "ASL Later"))
             )
      whole4 <- summary_table(ASL_Lat, summary)
      whole4

# VIOLIN PLOTS ARE BEST PLOTS!

      ggplot(Dem2, aes(x=Dem2$LanguageGroup, y=Dem2$Age_Rounded)) + geom_violin()
      ggplot(Dem2, aes(x=Dem2$LanguageGroup, y=Dem2$SES)) + geom_violin()


## LOOKING AT DESCRIPTIVES BY LANGUAGE MODALITY AND TIMING

      Language_Modality <- ifelse(Dem2$Group_4cat == "English Early" | GiveN_subset$Group_4cat == "English Later", "English", "ASL")
      Language_Modality

      Dem2 <- cbind(Dem2, Language_Modality)

      kruskal.test(Age_Rounded ~ LanguageGroup, data = Dem2)
      kruskal.test(SES ~ LanguageGroup, data = Dem2)


      ggplot(Dem2, aes(x=Dem2$Language_Modality, y=Dem2$Age_Rounded)) + geom_violin()

      wilcox.test(Dem2$Age_Rounded~Dem2$Language_Modality) # NOT DIFFERENT

      ggplot(Dem2, aes(x=Dem2$Language_Modality, y=Dem2$SES)) + geom_violin()
      wilcox.test(Dem2$SES~Dem2$Language_Modality) # ALSO NOT DIFFERENT

      ggplot(Dem2, aes(x=Dem2$Early_Later, y=Dem2$Age_Rounded)) + geom_violin()

      wilcox.test(Dem2$Age_Rounded~Dem2$Early_Later)

      ggplot(Dem2, aes(x=Dem2$Early_Later, y=Dem2$SES)) + geom_violin()
      wilcox.test(Dem2$SES~Dem2$Early_Later)



#Checking Number of Participants Per Experimental Group
      #Project 1
      
      setwd("~/Desktop")
      P1_BGQ <- read.csv("Background_Questionnaire_MAIN_KW_190624.csv", na.strings = "N/A")
      View(P1_BGQ)
      library(dplyr)
      P1_BGQ_Short <- select(P1_BGQ, SUBJ.ID, Group_2cat, Child_Language, Early_Later, Group_4cat, Tested, Including.in.Study, Testing.Location, Program.Language.Use, Age_Rounded, Age.of.Exposure..mo., Child.Hearing.Status, M.F, Child.s.Educational.Experiences.and.Environment, Hearing.Status.Caregiver.1, Hearing.Status.Caregiver.2, What.kind.of.hearing.technology.does.your.child.typically.use., Please.estimate.which.language.is.MOST.used.in.various.settings., Race_3cat, Ethnicity_3cat, Educ_P1.P2_Mean)
      View(P1_BGQ_Short)
      AE_1 <- subset(P1_BGQ_Short, P1_BGQ_Short$Group_4cat == "ASL Early" & P1_BGQ_Short$Including.in.Study == "Yes") 
      AL_1 <- subset(P1_BGQ_Short, P1_BGQ_Short$Group_4cat == "ASL Later" & P1_BGQ_Short$Including.in.Study == "Yes")
      EL_1 <- subset(P1_BGQ_Short, P1_BGQ_Short$Group_4cat == "English Later" & P1_BGQ_Short$Including.in.Study == "Yes")
      EE_1 <- subset(P1_BGQ_Short, P1_BGQ_Short$Group_4cat == "English Early" & P1_BGQ_Short$Including.in.Study == "Yes")
      sum(AL_1$Group_4cat == 'ASL Later', na.rm=TRUE) 
      sum(EL_1$Group_4cat == 'English Later', na.rm=TRUE) 
      sum(EE_1$Group_4cat == 'English Early', na.rm=TRUE) 
      sum(AE_1$Group_4cat == 'ASL Early', na.rm=TRUE) 

      #Project 2
      setwd("~/Desktop")
      P2_BGQ <- read.csv("SLaMProject2BackgroundQuestionnaire_KW_190701.csv", na.strings = "N/A")
      View(P2_BGQ)
      library(dplyr)
      P2_BGQ_Short <- select(P2_BGQ, SUBJ.ID, Group_2cat, Child_Language, Early_Later, Group_4cat, Tested, Including.in.Study, P1.Tested., Grade., Testing.Location, Program.Language.Use, Age_Rounded, Age.of.Exposure..mo., Child.Hearing.Status, M.F, Child.s.Educational.Experiences.and.Environment, Hearing.Status.Caregiver.1, Hearing.Status.Caregiver.2, What.kind.of.hearing.technology.does.your.child.typically.use., Please.estimate.which.language.is.MOST.used.in.various.settings., Race_3cat, Ethnicity_3cat, Educ_P1.P2_Mean)
      View(P2_BGQ_Short)
      AE_2 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "ASL Early" & P2_BGQ_Short$Including.in.Study == "Yes") 
      AL_2 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "ASL Later" & P2_BGQ_Short$Including.in.Study == "Yes")
      EE_2 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "English Early" & P2_BGQ_Short$Including.in.Study == "Yes")
      EL_2 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "English Later" & P2_BGQ_Short$Including.in.Study == "Yes")
      sum(AL_2$Group_4cat == 'ASL Later', na.rm=TRUE) 
      sum(EL_2$Group_4cat == 'English Later', na.rm=TRUE) 
      sum(EE_2$Group_4cat == 'English Early', na.rm=TRUE) 
      sum(AE_2$Group_4cat == 'ASL Early', na.rm=TRUE) 

      #Project 1 and 2
      AE_12 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "ASL Early" & P2_BGQ_Short$Including.in.Study == "Yes" & P2_BGQ_Short$P1.Tested. == "Yes") 
      AL_12 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "ASL Later" & P2_BGQ_Short$Including.in.Study == "Yes" & P2_BGQ_Short$P1.Tested. == "Yes") 
      EE_12 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "English Early" & P2_BGQ_Short$Including.in.Study == "Yes" & P2_BGQ_Short$P1.Tested. == "Yes") 
      EL_12 <- subset(P2_BGQ_Short, P2_BGQ_Short$Group_4cat == "English Later" & P2_BGQ_Short$Including.in.Study == "Yes" & P2_BGQ_Short$P1.Tested. == "Yes") 
      sum(AL_12$Group_4cat == 'ASL Later', na.rm=TRUE) 
      sum(EL_12$Group_4cat == 'English Later', na.rm=TRUE) 
      sum(EE_12$Group_4cat == 'English Early', na.rm=TRUE) 
      sum(AE_12$Group_4cat == 'ASL Early', na.rm=TRUE) 


#General Linear Model/Regression
  #Note: Use LanguageGroup so all compared to English Early group
  #STEPS
      #1.   Create regression and run summary
      #2.   Check if data is normally distributed (cannot violate normality)
      #3.   Create jittered scatterplots of variables in regression 
      #4.   Run a correlation test of variables ("kendall") (cannot be correlated)
                  #P values <.05 means differs significantly between expected and actual, so not the best model to describe the data
      #5. 
  
    #GiveN
            GN_c_reg <- lm(MC_GiveN$GiveN_ALL_ceiling_conservative ~ MC_GiveN$Age + MC_GiveN$SES_range_8_to_66 + MC_GiveN$LanguageGroup + MC_GiveN$Sex, data=MC_GiveN)
            summary(GN_c_reg)
            #Density plot to check if normally distributed
            ggplot(data=MC_GiveN) + geom_density(mapping=aes(x=MC_GiveN$GiveN_ALL_ceiling_conservative, y=..count..))
            #Scatterplot SES
            ggplot(data=MC_GiveN, mapping=aes(x=SES, y=MC_GiveN$GiveN_ALL_ceiling_conservative)) + geom_jitter() + labs (x="SES", y= "Give N Highest Count")
            #Correlation Test ("Kendall") SES
            cor.test(MC_GiveN$SES_range_8_to_66, MC_GiveN$GiveN_ALL_ceiling_conservative, method= c("kendall"))  
            #Test normality
            
            #Test residual normality
            ols_plot_resid_qq(GN_c_reg)
            
    #Elicited Counting w/ Objects
            EC_w_reg <- lm(MC_GiveN$Highest_Count_wobj ~ MC_GiveN$Age + MC_GiveN$SES_range_8_to_66 + MC_GiveN$LanguageGroup + MC_GiveN$Sex, data=MC_GiveN)
            summary(EC_w_reg)
            #Density plot to check if normally distributed
            ggplot(data=MC_GiveN) + geom_density(mapping=aes(x=MC_GiveN$Highest_Count_wobj, y=..count..))
            #Scatterplot SES
            ggplot(data=MC_GiveN, mapping=aes(x=SES, y=MC_GiveN$Highest_Count_wobj)) + geom_jitter() + labs (x="SES", y= "Highest Count with Objects")
            #Correlation Test ("Kendall") SES
            cor.test(MC_GiveN$SES_range_8_to_66, MC_GiveN$Highest_Count_wobj, method= c("kendall"))          
            #Test normality
            
            #Test residual normality
            ols_plot_resid_qq(EC_w_reg)
            
    #Elicited Counting w/o Objects
            EC_wo_reg <- lm(MC_GiveN$Highest_Count_noobj ~ MC_GiveN$Age + MC_GiveN$SES_range_8_to_66 + MC_GiveN$LanguageGroup + MC_GiveN$Sex, data=MC_GiveN)
            summary(EC_wo_reg)
            #Density plot to check if normally distributed
            ggplot(data=MC_GiveN) + geom_density(mapping=aes(x=MC_GiveN$Highest_Count_noobj, y=..count..))
            #Scatterplot SES
            ggplot(data=MC_GiveN, mapping=aes(x=SES, y=MC_GiveN$Highest_Count_noobj)) + geom_jitter() + labs (x="SES", y= "Highest Count without Objects")
            #Correlation Test ("Kendall") SES
            cor.test(MC_GiveN$SES_range_8_to_66, MC_GiveN$Highest_Count_noobj, method= c("kendall"))
            #Test normality
            
            #Test residual normality
            ols_plot_resid_qq(EC_wo_reg) 
 
    #Max Count
            max_cnt <- lm(MC_GiveN$MAX_COUNT_SEQ ~ MC_GiveN$Age + MC_GiveN$SES_range_8_to_66 + MC_GiveN$LanguageGroup + MC_GiveN$Sex, data=MC_GiveN)
            summary(max_cnt)
            #Density plot to check if normally distributed
            ggplot(data=MC_GiveN) + geom_density(mapping=aes(x=MC_GiveN$MAX_COUNT_SEQ, y=..count..))
            #Scatterplot SES
            ggplot(data=MC_GiveN, mapping=aes(x=SES, y=MC_GiveN$MAX_COUNT_SEQ)) + geom_jitter() + labs (x="SES", y= "Highest Count Overall")
            #Correlation Test ("Kendall") SES
            cor.test(MC_GiveN$SES_range_8_to_66, MC_GiveN$MAX_COUNT_SEQ, method= c("kendall"))
            #Test normality
            
            #Test residual normality
            ols_plot_resid_qq(max_cnt)
            
            
    #ORDINAL REGRESSION MODELS
            #Instructions for this from: https://stats.idre.ucla.edu/r/dae/ordinal-logistic-regression/
            j <- polr(formula = GN_lrg_f ~ KnowerLevel, data = AllGrps, Hess = TRUE)
            summary(j)
            jtable <- coef(summary(j))
            p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
            (ctable <- cbind(ctable, "p value" = p))
            stargazer(jtable, out= "GN_lrg_KnowerLevel.htm")

            #USE THIS CODE BELOW! 
            stargazer(j, title = "Give-N Large Knower Level Ordinal Logistic Regression Results", align=TRUE, dep.var.labels=c("Give-N Large"), covariate.labels=c("Knower Level"), single.row=TRUE, keep.stat=c("n", "aic"), report=('vc*stp'), out= "GNLRGKNOWERLEVEL.htm")

